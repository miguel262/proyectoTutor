{"version":3,"sources":["herramientas/Hint.js","factorComun/ejercicio/FCpaso1.js","factorComun/FactorComun.js","factorComunCompuesto/EjerciciosFCC.js","factorComunCompuesto/ejercicio/FCCpaso1.js","factorComunCompuesto/ejercicio/FCCpaso2.js","factorComunCompuesto/FactorComunCompuesto.js","diferenciaCuadrados/EjerciciosDC.js","diferenciaCuadrados/ejercicio/DCpaso1.js","diferenciaCuadrados/ejercicio/DCpaso2.js","diferenciaCuadrados/DiferenciaCuadrados.js","diferenciaSumaCubos/EjerciciosDSC.js","diferenciaSumaCubos/ejercicios/DSCpaso1.js","diferenciaSumaCubos/ejercicios/DSCpaso2.js","diferenciaSumaCubos/DiferenciaSumaCubos.js","trinomiosCuadraticos/EjerciciosTC.js","trinomiosCuadraticos/ejercicio/TCpaso1.js","trinomiosCuadraticos/ejercicio/TCpaso2.js","trinomiosCuadraticos/ejercicio/TCpaso3.js","trinomiosCuadraticos/ejercicio/TCpaso4.js","trinomiosCuadraticos/ejercicio/TCpaso5.js","trinomiosCuadraticos/ejercicio/TCpaso6.js","trinomiosCuadraticos/TrinomiosCuadraticos.js","factorComun/EjerciciosFC.js","Tutor.js","index.js"],"names":["Hint","ejercicio","setHintsTerminado","useState","hint","setHint","i","setI","OverlayTrigger","trigger","rootClose","placement","overlay","id","type","className","onClick","Popover","style","padding","Content","Alert","variant","FCpaso1","setPaso1Valido","paso1Valido","hintsTerminado","respuesta","useRef","estado","setEstado","correcta","entrada","Row","Col","md","xl","tex","String","raw","expresion","display","backgroundColor","border","color","textAlign","name","placeholder","autoComplete","ref","disabled","current","value","replace","toLowerCase","some","element","validacion","result_final","error","hint_solicitado","FC","Breadcrumb","Item","active","textoProblema","Accordion","defaultActiveKey","Card","bg","Toggle","as","Header","eventKey","paso","Collapse","Body","Ejercicio1","prob_id","titulo","dificultad","pasos","explicacion","soluciones","pasoSiguiente","FCCpaso1","respuesta1","respuesta2","correctas","map","elemento","htmlFor","valida","findIndex","FCCpaso2","setPaso2Valido","paso2Valido","FCC","paso3Valido","setPaso3Valido","hintsTerminado2","setHintsTerminado2","hintsTerminado3","setHintsTerminado3","Ejercicio2","DCpaso1","DCpaso2","DC","signo","DSCpaso1","DSCpaso2","DSC","formula","TCpaso1","TCpaso2","respuesta3","TCpaso3","TCpaso4","setPaso4Valido","paso4Valido","Form","Check","label","margin","document","getElementById","checked","TCpaso5","setPaso5Valido","paso5Valido","TCpaso6","setPaso6Valido","paso6Valido","TC","hintsTerminado5","setHintsTerminado5","hintsTerminado6","setHintsTerminado6","Principal","divRoot","querySelector","reactDom","render","Tutor"],"mappings":"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","file":"static/js/main.05aef374.chunk.js","sourcesContent":["import { Alert, OverlayTrigger, Popover } from 'react-bootstrap';\r\nimport React, {useState } from 'react';\r\n\r\nconst Hint = ({ejercicio,setHintsTerminado}) => {\r\n\r\n    const [hint,setHint] = useState(null);\r\n    \r\n    const [i,setI] = useState(0);\r\n\r\n    const ayuda = () =>{\r\n        if (ejercicio[i+1]!= null){\r\n            setI(i+1);\r\n        }\r\n        else{\r\n            setHintsTerminado(\r\n                i\r\n            )\r\n        }\r\n        \r\n        setHint(\r\n            <Popover   style={{ padding: 0}}>\r\n                <Popover.Content style={{ padding: 0}}>\r\n                    <Alert variant=\"info\">\r\n                        <p>{ejercicio[i]}</p>\r\n                    </Alert>\r\n                </Popover.Content>\r\n            </Popover>\r\n        )\r\n         \r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <p>\r\n           \r\n                <OverlayTrigger trigger=\"click\" rootClose placement=\"bottom\" overlay={hint} >\r\n                        <button id=\"boton\" type=\"submit\" className=\"btn btn-outline-info\"  onClick={ayuda}>Hint</button>\r\n                </OverlayTrigger> \r\n                &nbsp; Ayuda\r\n                \r\n            </p>\r\n        </div>\r\n        \r\n    );\r\n\r\n}\r\n\r\nexport default Hint;","import React, { useRef, useState } from 'react';\r\nimport {MathComponent} from 'mathjax-react';\r\nimport { Col, Row,Alert } from 'react-bootstrap';\r\nimport Hint from '../../herramientas/Hint';\r\n\r\nconst FCpaso1 = ({ejercicio, setPaso1Valido, paso1Valido, hintsTerminado, setHintsTerminado}) => {\r\n    \r\n    //hook para obtener un input\r\n    const respuesta = useRef(null);\r\n    //hook para volver a renderizar cuando el estudiante ingrese una respuesta \r\n    const [estado,setEstado] = useState(null);\r\n    //resultado correcto (hay que validar para todas las entradas posibles)\r\n    const correcta = ejercicio.entrada;\r\n    //const variable = ejercicio.result_variable;\r\n    //esta función se ejecuta cuando se oprime el boton aceptar\r\n  \r\n    //hint\r\n    //const [hintsTerminado,setHintsTerminado] = useState(null);\r\n\r\n\r\n    const comparar=()=>{\r\n        //parametro de entrada recibido, replace elimina \"espacios\" y \"*\", trabajar todo en minuscula\r\n        const entrada = respuesta.current.value.replace(/[*]| /g, \"\").toLowerCase();\r\n        \r\n        //El método some() comprueba si al menos un elemento del array \r\n        //cumple con la condición implementada por la función proporcionada.\r\n        const valida = (element) => element === entrada;\r\n\r\n        if (correcta.some(valida)) {\r\n            //valida que la entrada es correcta\r\n            setEstado(\r\n                <div className=\"alert alert-success\"> \r\n                    <p>{ejercicio.validacion}:&nbsp;\r\n                    <MathComponent tex={ejercicio.entrada[0]}  display={false}/>\r\n                    </p>\r\n                    <p>\r\n                    Entonces la factorización queda de la forma:\r\n                    &nbsp;\r\n                    <MathComponent tex={ejercicio.result_final}  display={false}/>\r\n                    </p>\r\n                </div>\r\n            );\r\n            setPaso1Valido(\r\n                paso1Valido=\"Terminado\"\r\n            );\r\n        }\r\n        else{\r\n            \r\n            setEstado(\r\n                    //error cuando la entrada es incorrecta\r\n                    <Alert variant=\"danger\">{ejercicio.error} </Alert>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            \r\n            <Row  style={{ padding: 0}}>\r\n                <Col md=\"12\" xl=\"3\" style={{padding: 26.5}}>    \r\n                    <MathComponent tex={String.raw`${ejercicio.expresion}`}  display={false}/>\r\n                </Col>\r\n                <Col md=\"5\" xl=\"4\" style={{padding: 0}}> \r\n                <div className=\"input-group\">\r\n                {hintsTerminado===null&&<input style={{backgroundColor: \"#21232A\",border: \"none\",color:\"white\",textAlign:\"center\"}}\r\n                            type=\"text\" \r\n                            name=\"name\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Ingrese factor común\"\r\n                            autoComplete= \"off\"\r\n                            ref= {respuesta}\r\n                            disabled = {paso1Valido!=null}\r\n                        ></input>}\r\n                        {(paso1Valido===null)&&hintsTerminado===null&&<button \r\n                            type=\"submit\" \r\n                            className=\"btn btn-outline-success\"\r\n                            onClick={comparar}\r\n                        >\r\n                            Aceptar\r\n                        </button>}\r\n                        {hintsTerminado!==null&& <p>{ejercicio.hint_solicitado[hintsTerminado]}</p>}\r\n                      </div>\r\n                             \r\n                </Col>\r\n                <Col md = \"7\" xl=\"5\" style={{padding: 0}}> \r\n                {paso1Valido===null&&hintsTerminado===null&&<Hint ejercicio={ejercicio.hint_solicitado} setHintsTerminado ={setHintsTerminado} ></Hint>}\r\n                </Col> \r\n                {hintsTerminado===null&&estado}\r\n            </Row>\r\n           \r\n        </>\r\n    )\r\n}\r\nexport default FCpaso1;","import React, { useState } from 'react';\r\n//import {Ejercicio1, Ejercicio2,Ejercicio3,Ejercicio4,Ejercicio5,Ejercicio6,Ejercicio7} from './EjerciciosFC';\r\nimport './FactorComun.css';\r\nimport FCpaso1 from './ejercicio/FCpaso1';\r\n//import FCejemplo from './ejercicio/FCejemplo';\r\n\r\n\r\nimport {MathComponent} from 'mathjax-react';\r\nimport {Accordion,Card,Breadcrumb} from 'react-bootstrap';\r\n//react functional component\r\nconst FC= ({ejercicio})=>{\r\n\r\n    //const ejemplo = Ejercicio2;\r\n    //const ejercicio=Ejercicio1;\r\n    const [paso1Valido, setPaso1Valido] = useState(null);\r\n    const [hintsTerminado,setHintsTerminado] = useState(null);\r\n\r\n    return (\r\n        <div>\r\n            \r\n            {//crear el boton para ver el ejemplo\r\n            //<FCejemplo ejemplo={ejemplo}></FCejemplo>\r\n            }\r\n            <Breadcrumb>\r\n                <Breadcrumb.Item style={{color: \"red\"}}>Factorización</Breadcrumb.Item>\r\n                <Breadcrumb.Item active>Factor común</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n\r\n            <h3>{ejercicio.textoProblema}</h3>\r\n            <MathComponent tex={ejercicio.expresion} display={true} />\r\n     \r\n            <Accordion defaultActiveKey=\"0\">\r\n                <Card bg={paso1Valido==null?(hintsTerminado===null?\"secondary\":\"danger\"):\"success\"} style={{padding: 0}}>\r\n                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                        {ejercicio.paso}\r\n                        {paso1Valido!=null&&\"    ✔ \"}\r\n                        {hintsTerminado!=null&&\"    ❌ \"}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"0\" style={{padding: 1}}>\r\n                    <Card.Body style={{padding: 0}}>\r\n                        <FCpaso1 ejercicio={ejercicio} setPaso1Valido={setPaso1Valido} paso1Valido={paso1Valido} hintsTerminado={hintsTerminado} setHintsTerminado={setHintsTerminado}></FCpaso1>\r\n                    </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </Accordion>\r\n            \r\n        </div>\r\n            \r\n\r\n    )\r\n}\r\n\r\nexport default FC;","export const Ejercicio1 = {\r\n    prob_id : 2000,\r\n    titulo : \"Factorización por factor común compuesto.\",\r\n    dificultad:\"3\",\r\n    textoProblema: \"Texto problema/ejercicio, planteamiento\",\r\n    //enunciado\r\n    pasos: [\r\n        {\r\n            id:\"0\",\r\n            expresion: \"ax + bx + ay + by\",\r\n            paso: \"Paso 1: agrupe los sumandos\",\r\n            explicacion:\"agrupar los sumandos según los términos en común\",\r\n            result_final:[\"(ax + ay) + (bx + by)\",\"(ax + bx) + (ay + by)\"],\r\n            hint_solicitado:[\"agrupa los sumandos con términos que se repiten (comenzar con los primeros términos de los sumandos)\",\r\n            \"agrupa los sumandos con constantes iguales\",\"los grupos son: (ax + ay) + (bx + by)\"],\r\n            soluciones:[{entrada:[\"ax+ay\",\"bx+by\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"ay+ax\",\"bx+by\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"ax+ay\",\"by+bx\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"ay+ax\",\"by+bx\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"ax+bx\",\"ay+by\"],pasoSiguiente:\"2\"},\r\n                        {entrada:[\"bx+ax\",\"ay+by\"],pasoSiguiente:\"2\"},\r\n                        {entrada:[\"ax+bx\",\"by+ay\"],pasoSiguiente:\"2\"},\r\n                        {entrada:[\"bx+ax\",\"by+ay\"],pasoSiguiente:\"2\"}],\r\n            error:\"no se ha agrupado correctamente la expresión\",\r\n            validacion:\"Haz agrupado los sumandos\"\r\n        },\r\n        {\r\n            id:\"1\",\r\n            expresion: \"(ax + ay) + (bx + by)\",\r\n            paso: \"Paso 2: ingrese el factor común de cada grupo\",\r\n            explicacion:\"a cada uno de los grupos de sumandos ingrese su factor común\",\r\n            result_final:[[\"(a)\",\"(x+y)\"],[\"(b)\",\"(x+y)\"]],\r\n            hint_solicitado:[\"Hint 1\", \"hint 2\", \"hint 3\"],\r\n            soluciones: {entrada:[\"a\",\"b\"], pasoSiguiente: \"3\"} ,\r\n            error:\"factor común incorrecto, ingrese el factor común correspondiente a la expresión dada\",\r\n            validacion:\"Haz encontrado el factor común\"\r\n        }, \r\n        {\r\n            id:\"2\",\r\n            expresion: \"(ax + bx) + (ay + by)\",\r\n            paso: \"Paso 2: ingrese el factor común de cada grupo\",\r\n            explicacion:\"a cada uno de los grupos de sumandos ingrese su factor común\",\r\n            result_final:[[\"(x)\",\"(a+b)\"],[\"(y)\",\"(a+b)\"]],\r\n            hint_solicitado:[\"hint 1\", \"hint 2\", \"hint3\"],\r\n            soluciones: {entrada:[\"x\",\"y\"], pasoSiguiente: \"4\"} ,\r\n            error:\"factor común incorrecto, ingrese el factor común correspondiente a la expresión dada\",\r\n            validacion:\"Haz encontrado el factor común\"\r\n        },\r\n        {\r\n            id:\"3\",\r\n            expresion: \"a(x+y)+b(x+y)\",\r\n            paso: \"Paso 3: ingrese el factor común\",\r\n            explicacion:\"En este caso todos los términos de la expresión algebraica presentan un factor común, la tarea es encontrar dicho factor común para luego factorizar\",\r\n            //result_variable:[],\r\n            //hint_result_var:\"\",\r\n            result_final:\"(x+y)(a+b)\",\r\n            hint_solicitado:[\"ver variable que se repite en ambos sumandos\",\"el factor común de la expresión es: x + y\"],\r\n            entrada:[\"x+y\"],\r\n            error:\"factor común incorrecto, ingrese el factor común correspondiente a la expresión dada\",\r\n            validacion:\"Haz encontrado el factor común\"\r\n        },\r\n        {\r\n            id:\"4\",\r\n            expresion: \"x(a+b)+y(a+b)\",\r\n            paso: \"Paso 3: ingrese el factor común\",\r\n            explicacion:\"En este caso todos los términos de la expresión algebraica presentan un factor común, la tarea es encontrar dicho factor común para luego factorizar\",\r\n            //result_variable:[],\r\n            //hint_result_var:\"\",\r\n            result_final:\"(a+b)(x+y)\",\r\n            hint_solicitado:[\"ver variable que se repite en ambos sumandos\",\"el factor común es a + b\"],\r\n            entrada:[\"a+b\"],\r\n            error:\"factor común incorrecto, ingrese el factor común correspondiente a la expresión dada\",\r\n            validacion:\"Haz encontrado el factor común\"\r\n        }\r\n\r\n    ]\r\n    \r\n}\r\n\r\nexport const Ejercicio2 = {\r\n    prob_id : 2001,\r\n    titulo : \"Factorización por factor común compuesto.\",\r\n    dificultad:\"3\",\r\n    textoProblema: \"Texto problema/ejercicio, planteamiento\",\r\n    pasos: [\r\n        {\r\n            id:\"0\",\r\n            expresion: \"2ax + 2bx - ay + 5a - by + 5b\",\r\n            paso: \"Paso 1: agrupe los sumandos\",\r\n            explicacion:\"agrupar los sumandos según los términos en común\",\r\n            result_final:[\"(2ax - ay + 5a) + (2bx - by + 5b)\"],\r\n            hint_solicitado:[\"agrupa los sumandos con términos que se repiten (comenzar con los primeros términos de los sumandos)\",\r\n            \"agrupa los sumandos con constantes iguales\",\"los grupos son: (2ax - ay + 5a) + (2bx - by + 5b)\"],\r\n            soluciones:[{entrada:[\"2ax-ay+5a\",\"2bx-by+5b\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"2ax-ay+5a\",\"2bx+5b-by\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"2ax-ay+5a\",\"-by+2bx+5b\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"2ax-ay+5a\",\"-by+5b+2bx\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"2ax-ay+5a\",\"5b+2bx-by\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"2ax-ay+5a\",\"5b-by+2bx\"],pasoSiguiente:\"1\"},\r\n\r\n                        {entrada:[\"2ax+5a-ay\",\"2bx-by+5b\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"2ax+5a-ay\",\"2bx+5b-by\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"2ax+5a-ay\",\"-by+2bx+5b\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"2ax+5a-ay\",\"-by+5b+2bx\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"2ax+5a-ay\",\"5b+2bx-by\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"2ax+5a-ay\",\"5b-by+2bx\"],pasoSiguiente:\"1\"},\r\n\r\n                        {entrada:[\"-ay+2ax+5a\",\"2bx-by+5b\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"-ay+2ax+5a\",\"2bx+5b-by\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"-ay+2ax+5a\",\"-by+2bx+5b\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"-ay+2ax+5a\",\"-by+5b+2bx\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"-ay+2ax+5a\",\"5b+2bx-by\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"-ay+2ax+5a\",\"5b-by+2bx\"],pasoSiguiente:\"1\"},\r\n\r\n                        {entrada:[\"-ay+5a+2ax\",\"2bx-by+5b\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"-ay+5a+2ax\",\"2bx+5b-by\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"-ay+5a+2ax\",\"-by+2bx+5b\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"-ay+5a+2ax\",\"-by+5b+2bx\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"-ay+5a+2ax\",\"5b+2bx-by\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"-ay+5a+2ax\",\"5b-by+2bx\"],pasoSiguiente:\"1\"},\r\n\r\n                        {entrada:[\"5a+2ax-ay\",\"2bx-by+5b\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"5a+2ax-ay\",\"2bx+5b-by\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"5a+2ax-ay\",\"-by+2bx+5b\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"5a+2ax-ay\",\"-by+5b+2bx\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"5a+2ax-ay\",\"5b+2bx-by\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"5a+2ax-ay\",\"5b-by+2bx\"],pasoSiguiente:\"1\"},\r\n\r\n                        {entrada:[\"5a-ay+2ax\",\"2bx-by+5b\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"5a-ay+2ax\",\"2bx+5b-by\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"5a-ay+2ax\",\"-by+2bx+5b\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"5a-ay+2ax\",\"-by+5b+2bx\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"5a-ay+2ax\",\"5b+2bx-by\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"5a-ay+2ax\",\"5b-by+2bx\"],pasoSiguiente:\"1\"},\r\n                    ],\r\n            error:\"no se ha agrupado correctamente la expresión\",\r\n            validacion:\"Haz agrupado los sumandos\"\r\n        },\r\n        {\r\n            id:\"1\",\r\n            expresion: \"(2ax-ay+5a) + (2bx-by+5b)\",\r\n            paso: \"Paso 2: ingrese el factor común de cada grupo\",\r\n            explicacion:\"a cada uno de los grupos de sumandos ingrese su factor común\",\r\n            result_final:[[\"(a)\",\"(2x-y+5)\"],[\"(b)\",\"(2x-y+5)\"]],\r\n            hint_solicitado:[\"los grupos de sumandos son los que estan en parentesis\",\"hint2\",\"hint3\"],\r\n            soluciones: {entrada:[\"a\",\"b\"], pasoSiguiente: \"2\"},\r\n            error:\"factor común incorrecto, ingrese el factor común correspondiente a la expresión dada\",\r\n            validacion:\"Haz encontrado el factor común\"\r\n        },\r\n        {\r\n            expresion: \"a(2x-y+5)+b(2x-y+5)\",\r\n            paso: \"Paso 3: ingrese el factor común\",\r\n            explicacion:\"En este caso todos los términos de la expresión algebraica presentan un factor común, la tarea es encontrar dicho factor común para luego factorizar\",\r\n            //result_variable:[],\r\n            //hint_result_var:\"\",\r\n            result_final:\"(2x-y+5)(a+b)\",\r\n            hint_solicitado:[\"ver variable que se repite en ambos sumandos\",\"el factor común de la expresión es: x + y\"],\r\n            entrada:[\"2x-y+5\",\"2x+5-y\",\"-y+2x+5\",\"-y+5+2x\",\"5+2x-y\",\"5-y+2x\"],\r\n            error:\"factor común incorrecto, ingrese el factor común correspondiente a la expresión dada\",\r\n            validacion:\"Haz encontrado el factor común\"\r\n        }\r\n\r\n    ]\r\n    \r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport {MathComponent} from 'mathjax-react';\r\nimport {Col, Row,Alert } from 'react-bootstrap';\r\nimport Hint from '../../herramientas/Hint';\r\n\r\nconst FCCpaso1 = ({ejercicio, setPaso1Valido, paso1Valido, hintsTerminado, setHintsTerminado}) => {\r\n    const respuesta1 = useRef(null);\r\n    const respuesta2 = useRef(null);\r\n    const [estado,setEstado] = useState(null);\r\n    //let idPasoSiguiente = null;\r\n    const correctas = ejercicio.soluciones.map((elemento)=>elemento.entrada);\r\n\r\n\r\n\r\n    const comparar=()=>{\r\n        //parametro de entrada recibido, replace elimina \"espacios\" y \"*\", trabajar todo en minuscula\r\n        const entrada = [respuesta1.current.value.replace(/[*]| /g, \"\").toLowerCase(),respuesta2.current.value.replace(/[*]| /g, \"\").toLowerCase()];\r\n    \r\n        \r\n        //valida que la entrada es correctas\r\n        const valida = (element) =>((element[0] === entrada[0]) && (element[1] === entrada[1])) || ((element[0] === entrada[1]) && (element[1] === entrada[0]));\r\n        //El método some() comprueba si al menos un elemento del array \r\n        //cumple con la condición implementada por la función proporcionada.\r\n        if (correctas.some(valida)) {\r\n            setPaso1Valido(\r\n                paso1Valido=ejercicio.soluciones[correctas.findIndex(valida)].pasoSiguiente\r\n            );\r\n            /*setEstado(\r\n                <div className=\"alert alert-success\"> \r\n                        <p>{ejercicio.validacion}:&nbsp;\r\n                        <MathComponent tex={ejercicio.result_final[idPasoSiguiente-1]}  display={false}/>\r\n                        </p>\r\n                </div>\r\n            );*/\r\n        }\r\n        else{\r\n                setEstado(\r\n                    //error cuando la entrada es incorrecta\r\n                    <Alert variant=\"danger\">\r\n                        <p>{ejercicio.error}</p> \r\n                    </Alert>\r\n                );\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <>\r\n            \r\n            <Row  style={{color: \"hotpink\", padding: 0}}>\r\n                <Col xl= \"3\" style={{padding: 26.5}}>    \r\n                    <MathComponent tex={String.raw`${ejercicio.expresion}`}  display={false}/>\r\n                </Col>\r\n                <Col xl= \"5\" style={{padding: 0}}> \r\n                {hintsTerminado===null&&<div className=\"input-group\">\r\n                    <label htmlFor=\"label1\">(</label>\r\n                            <input style={{backgroundColor: \"#21232A\",border: \"none\",color:\"white\",textAlign:\"center\"}}\r\n                            id=\"label1\"\r\n                            type=\"text\" \r\n                            name=\"name\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Ingrese grupo 1\"\r\n                            autoComplete= \"off\"\r\n                            ref= {respuesta1}\r\n                            disabled = {paso1Valido!=null}\r\n                        ></input>\r\n                        <label htmlFor=\"label2\">)&nbsp;+&nbsp;(</label>\r\n                            <input style={{backgroundColor: \"#21232A\",border: \"none\",color:\"white\",textAlign:\"center\"}}\r\n                            id=\"label2\"\r\n                            type=\"text\" \r\n                            name=\"name\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Ingrese grupo 2\"\r\n                            autoComplete= \"off\"\r\n                            ref= {respuesta2}\r\n                            disabled = {paso1Valido!=null}\r\n                        ></input>\r\n                        <label htmlFor=\"label3\">) &nbsp;</label>\r\n                        {paso1Valido==null&&<button \r\n                            id=\"label3\"\r\n                            type=\"submit\" \r\n                            className=\"btn btn-outline-success\"\r\n                            onClick={comparar}\r\n                        >\r\n                            Aceptar\r\n                        </button>}\r\n                        \r\n                    </div>}\r\n                    {hintsTerminado!==null&& <div> <p>{ejercicio.hint_solicitado[hintsTerminado]}</p> </div>}       \r\n                </Col>\r\n                <Col xl=\"4\" style={{padding: 0}}> \r\n                {paso1Valido==null&&hintsTerminado===null&&<Hint ejercicio={ejercicio.hint_solicitado} setHintsTerminado ={setHintsTerminado}></Hint>}\r\n                </Col> \r\n            </Row>\r\n            {paso1Valido==null&&hintsTerminado===null&&estado} \r\n        </>\r\n    )\r\n\r\n}\r\nexport default FCCpaso1;","import React,{useRef,useState} from 'react'\r\nimport {Col, Row, Alert} from 'react-bootstrap';\r\nimport Hint from '../../herramientas/Hint';\r\nimport {MathComponent} from 'mathjax-react';\r\n\r\nconst FCCpaso2 = ({ejercicio, setPaso2Valido, paso2Valido, hintsTerminado, setHintsTerminado}) => {\r\n    const respuesta1 = useRef(null);\r\n    const respuesta2 = useRef(null);\r\n    const correcta = ejercicio.soluciones.entrada;\r\n    const [estado,setEstado] = useState(null);\r\n    //let idPasoSiguiente = null;\r\n\r\n    const comparar=()=>{\r\n        const entrada = [respuesta1.current.value.replace(/[*]| /g, \"\").toLowerCase(),respuesta2.current.value.replace(/[*]| /g, \"\").toLowerCase()];\r\n\r\n        if (entrada[0]===correcta[0]&& entrada[1]===correcta[1]) {\r\n            setPaso2Valido(\r\n                paso2Valido=ejercicio.soluciones.pasoSiguiente\r\n            );\r\n            setEstado(\r\n                <div className=\"alert alert-success\"> \r\n                        <p>{ejercicio.validacion}:&nbsp;\r\n                        <MathComponent tex={ejercicio.result_final[0][0]+ejercicio.result_final[0][1]+\"+\"+ejercicio.result_final[1][0]+ejercicio.result_final[1][1]}  display={false}/>\r\n                        </p>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n                setEstado(\r\n                    //error cuando la entrada es incorrecta\r\n                    <Alert variant=\"danger\">\r\n                        <p>{ejercicio.error}</p> \r\n                    </Alert>\r\n                );\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            \r\n        <Row  style={{color: \"hotpink\", padding: 0}}>\r\n            <Col xl= \"3\" style={{padding: 26.5}}>\r\n                <MathComponent tex={ejercicio.expresion}  display={false}/>\r\n            </Col>\r\n            <Col xl= \"5\" style={{padding: 0}}> \r\n            {hintsTerminado===null&&<div className=\"input-group\">\r\n                    <label htmlFor=\"label1\">(</label>\r\n                    <input style={{backgroundColor: \"#21232A\",border: \"none\",color:\"white\",textAlign:\"center\"}}\r\n                        id=\"label1\"\r\n                        type=\"text\" \r\n                        name=\"name\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Factor común 1\"\r\n                        autoComplete= \"off\"\r\n                        ref= {respuesta1}\r\n                        disabled = {paso2Valido!=null}\r\n                    ></input>\r\n                    <label htmlFor=\"label2\">){<MathComponent tex={ejercicio.result_final[0][1]}  display={false}/>}&nbsp;+&nbsp;(</label>\r\n                    <input style={{backgroundColor: \"#21232A\",border: \"none\",color:\"white\",textAlign:\"center\"}}\r\n                        id=\"label2\"\r\n                        type=\"text\" \r\n                        name=\"name\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Factor común 2\"\r\n                        autoComplete= \"off\"\r\n                        ref= {respuesta2}\r\n                        disabled = {paso2Valido!=null}\r\n                    ></input>\r\n                    <label htmlFor=\"label3\">){<MathComponent tex={ejercicio.result_final[1][1]} display={false}/>} &nbsp;</label>\r\n                    {paso2Valido==null&&<button \r\n                        id=\"label3\"\r\n                        type=\"submit\" \r\n                        className=\"btn btn-outline-success\"\r\n                        onClick={comparar}\r\n                    >\r\n                        Aceptar\r\n                    </button>}\r\n                </div>}\r\n                {hintsTerminado!==null&& <div> <p>{ejercicio.hint_solicitado[hintsTerminado]}</p> </div>\r\n                }        \r\n            </Col>\r\n            <Col xl=\"4\" style={{padding: 0}}>\r\n            {paso2Valido==null&&hintsTerminado===null&&<Hint ejercicio={ejercicio.hint_solicitado} setHintsTerminado ={setHintsTerminado}></Hint>}\r\n            </Col> \r\n        </Row>\r\n        {paso2Valido==null&&hintsTerminado===null&&estado}\r\n    </>\r\n    )\r\n}\r\nexport default FCCpaso2;","import React, { useState} from 'react';\r\nimport {Ejercicio1} from './EjerciciosFCC';\r\nimport {MathComponent} from 'mathjax-react';\r\nimport { Breadcrumb, Accordion,Card } from 'react-bootstrap';\r\nimport FCCpaso1 from './ejercicio/FCCpaso1';\r\nimport FCCpaso2 from './ejercicio/FCCpaso2';\r\nimport FCpaso1 from '../factorComun/ejercicio/FCpaso1';\r\n//import FCCejemplo from './ejercicio/FCCejemplo';\r\n\r\nconst FCC= ()=>{\r\n    //const ejemplo = Ejercicio1;\r\n    const ejercicio = Ejercicio1;\r\n    const [paso1Valido, setPaso1Valido] = useState(null);\r\n    const [paso2Valido, setPaso2Valido] = useState(null);\r\n    const [paso3Valido, setPaso3Valido] = useState(null);\r\n    const [hintsTerminado,setHintsTerminado] = useState(null);\r\n    const [hintsTerminado2,setHintsTerminado2] = useState(null);\r\n    const [hintsTerminado3,setHintsTerminado3] = useState(null);\r\n    return (\r\n        <div>\r\n            {//<FCCejemplo ejemplo={ejemplo}></FCCejemplo>\r\n            }\r\n\r\n            <Breadcrumb>\r\n                <Breadcrumb.Item >Factorización</Breadcrumb.Item>\r\n                <Breadcrumb.Item active>Factor común compuesto</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n            <h3>{ejercicio.textoProblema}</h3>\r\n            <MathComponent tex={ejercicio.pasos[0].expresion} display={true} />\r\n\r\n            <Accordion defaultActiveKey={\"0\"}>\r\n                <Card bg={paso1Valido==null?(hintsTerminado===null?\"secondary\":\"danger\"):\"success\"} style={{padding: 0}}>\r\n                    <Accordion.Toggle as={Card.Header} eventKey={paso1Valido==null?\"0\":\"1\"}>\r\n                        {ejercicio.pasos[0].paso}\r\n                        {paso1Valido!=null&&\"    ✔ \"}\r\n                        {hintsTerminado!=null&&\"    ❌ \"}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey={paso1Valido==null?\"0\":\"1\"} style={{padding: 1}}>\r\n                    <Card.Body style={{padding: 0}}>\r\n                        <FCCpaso1 ejercicio={ejercicio.pasos[0]} setPaso1Valido={setPaso1Valido} paso1Valido={paso1Valido} hintsTerminado={hintsTerminado} setHintsTerminado={setHintsTerminado}>\r\n                        </FCCpaso1>\r\n                        \r\n                    </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n\r\n                <Card bg={paso2Valido==null?(hintsTerminado2===null?\"secondary\":\"danger\"):\"success\"} style={{padding: 0}}>\r\n                    <Accordion.Toggle as={Card.Header} eventKey={paso1Valido!=null?(paso2Valido!=null?\"2\":\"0\"):\"2\"}>\r\n                        {ejercicio.pasos[1].paso}\r\n                        {paso2Valido!=null&&\"    ✔ \"}\r\n                        {hintsTerminado2!=null&&\"    ❌ \"}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey={paso1Valido!=null?(paso2Valido!=null?\"2\":\"0\"):\"2\"} style={{padding: 1}}>\r\n                    <Card.Body style={{padding: 0}}>\r\n                    {paso1Valido!=null&&<FCCpaso2 ejercicio={ejercicio.pasos[paso1Valido]}  setPaso2Valido={setPaso2Valido} paso2Valido={paso2Valido} hintsTerminado={hintsTerminado2} setHintsTerminado={setHintsTerminado2}></FCCpaso2>}\r\n                    </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n\r\n                <Card bg={paso3Valido==null?(hintsTerminado3===null?\"secondary\":\"danger\"):\"success\"} style={{padding: 0}}>\r\n                    <Accordion.Toggle as={Card.Header} eventKey={paso2Valido!=null?\"0\":\"3\"}>\r\n                        {ejercicio.pasos[ejercicio.pasos[1].soluciones.pasoSiguiente].paso}\r\n                        {paso3Valido!=null&&\"    ✔ \"}\r\n                        {hintsTerminado3!=null&&\"    ❌ \"}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey={paso2Valido!=null?\"0\":\"3\"} style={{padding: 1}}>\r\n                    <Card.Body style={{padding: 0}}>\r\n                    {paso2Valido!=null&&<FCpaso1 ejercicio={ejercicio.pasos[paso2Valido]} setPaso1Valido={setPaso3Valido} paso1Valido={paso3Valido} hintsTerminado={hintsTerminado3} setHintsTerminado={setHintsTerminado3}></FCpaso1>}\r\n                    </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </Accordion>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FCC;","export const Ejercicio1 = {\r\n    prob_id : 3000,\r\n    titulo : \"Factorización por diferencia de cuadrados.\",\r\n    dificultad:\"1\",\r\n    textoProblema: \"Texto problema/ejercicio, planteamiento\",\r\n    pasos: [\r\n        {\r\n            id:\"0\",\r\n            expresion: \"9x^2-1\",\r\n            paso: \"Paso 1: identificar terminos al cuadrado\",\r\n            explicacion:\"\",\r\n            result_final:\"(3x)^2-(1)^2\",\r\n            hint_solicitado:[\"Enfocarse en los valores que acompañan al cuadrado\",\r\n            \"Un valor a ingresar es 1\",\"Los cuadrados son: (3x)^2 - (1)^2, donde los valores a ingresar son 3x y 1\"],\r\n            soluciones:[{entrada:[\"3x\",\"1\"],pasoSiguiente:\"1\"}],\r\n            error:\"No se han ingresado correctamente los términos que al cuadrado dan como resultado la expresión\",\r\n            //validacion:\"Haz encontrado los términos al cuadrado\"\r\n        },\r\n        {\r\n            id:\"1\",\r\n            expresion: \"(3x)^2-(1)^2\",\r\n            paso: \"Paso 2: ingresar suma por diferencia\",\r\n            explicacion:\"\",\r\n            result_final:\"(3x+1)(3x-1)\",\r\n            hint_solicitado:[\"Primer paréntesis ingresar suma\", \"Segundo paréntesis ingresar resta\",\"Factorización por suma y diferencia: (3x+1)(3x-1)\"],\r\n            entrada:[\"3x+1\",\"3x-1\"],\r\n            error:\"suma por diferencia mal ingresado\",\r\n            validacion:\"Haz factorizado por diferencia de cuadradros\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport const Ejercicio2 = {\r\n    prob_id : 3001,\r\n    titulo : \"Factorización por diferencia de cuadrados.\",\r\n    dificultad:\"1\",\r\n    textoProblema: \"Texto problema/ejercicio, planteamiento\",\r\n    pasos: [\r\n        {\r\n            expresion: \"x^2-y^2\",\r\n            paso: \"Paso 1: identificar terminos al cuadrado\",\r\n            explicacion:\"\",\r\n            result_final:\"(x)^2-(y)^2\",\r\n            hint_solicitado:[\"Enfocarse en los valores que acompañan al cuadrado\",\r\n            \"Un valor a ingresar es x\",\"Los cuadrados son: (x)^2 - (y)^2, donde los valores a ingresar son x e y\"],\r\n            soluciones:[{entrada:[\"x\",\"y\"],pasoSiguiente:\"1\"}],\r\n            error:\"no se han ingresado correctamente los términos que al cuadrado dan como resultado la expresión\",\r\n            //validacion:\"Haz encontrado los términos al cuadrado\"\r\n        },\r\n        {\r\n            expresion: \"(x)^2-(y)^2\",\r\n            paso: \"Paso 2: ingresar suma por diferencia\",\r\n            explicacion:\"\",\r\n            result_final:\"(x+y)(x-y)\",\r\n            hint_solicitado:[\"Primer paréntesis ingresar suma\", \"Segundo paréntesis ingresar resta\", \"Factorización por suma y diferencia: (x+y)(x-y)\"],\r\n            entrada:[\"x+y\",\"x-y\"],\r\n            error:\"suma por diferencia mal ingresado\",\r\n            validacion:\"Haz factorizado por diferencia de cuadradros\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport const Ejercicio3 = {\r\n    prob_id : 3001,\r\n    titulo : \"Factorización por diferencia de cuadrados.\",\r\n    dificultad:\"1\",\r\n    textoProblema: \"Texto problema/ejercicio, planteamiento\",\r\n    pasos: [\r\n        {\r\n            expresion: \"4x^2y^4-16x^2y^2\",\r\n            paso: \"Paso 1: identificar terminos al cuadrado\",\r\n            explicacion:\"\",\r\n            result_final:\"(2xy^2)^2-(4xy)^2\",\r\n            hint_solicitado:[\"\",\r\n            \"\",\"los cuadrados son: (2xy^2)^2 - (4xy)^2, donde los valores a ingresar son 2xy^2 e 4xy\"],\r\n            soluciones:[{entrada:[\"2xy^2\",\"4xy\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"2y^2x\",\"4xy\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"2xy^2\",\"4yx\"],pasoSiguiente:\"1\"},\r\n                        {entrada:[\"2y^2x\",\"4yx\"],pasoSiguiente:\"1\"}],\r\n            error:\"no se han ingresado correctamente los términos que al cuadrado dan como resultado la expresión\",\r\n            validacion:\"Haz encontrado los términos al cuadrado\"\r\n        },\r\n        {\r\n            expresion: \"(2xy^2)^2+(4xy)^2\",\r\n            paso: \"Paso 2: ingresar suma por diferencia\",\r\n            explicacion:\"\",\r\n            result_final:\"(2xy^2+4xy)(2xy^2-4xy)\",\r\n            hint_solicitado:[\"Primer paréntesis ingresar suma\", \"Segundo paréntesis ingresar resta\", \"factorización por suma y diferencia:\"],\r\n            entrada:[\"(2xy^2+4xy)\",\"(2xy^2-4xy)\"],\r\n            error:\"suma por diferencia mal ingresado\",\r\n            validacion:\"Haz encontrado la diferencia de cuadradros\"\r\n        }\r\n    ]\r\n}","import React, {useRef,useState} from 'react';\r\nimport Hint from '../../herramientas/Hint';\r\nimport {Col, Row,Alert } from 'react-bootstrap';\r\nimport {MathComponent} from 'mathjax-react';\r\n\r\nexport const DCpaso1 = ({ejercicio, setPaso1Valido, paso1Valido,  hintsTerminado, setHintsTerminado}) => {\r\n    const respuesta1 = useRef(null);\r\n    const respuesta2 = useRef(null);\r\n    const [estado,setEstado] = useState(null);\r\n    //let idPasoSiguiente = null;\r\n    const correctas = ejercicio.soluciones.map((elemento)=>elemento.entrada);\r\n    \r\n    \r\n\r\n    const comparar=()=>{\r\n        const entrada = [respuesta1.current.value.replace(/[*]| /g, \"\").toLowerCase(),respuesta2.current.value.replace(/[*]| /g, \"\").toLowerCase()];\r\n        const valida = (element) =>((element[0] === entrada[0]) && (element[1] === entrada[1]));\r\n        if (correctas.some(valida)) {\r\n            setPaso1Valido(\r\n                paso1Valido=ejercicio.soluciones[correctas.findIndex(valida)].pasoSiguiente\r\n            );\r\n            \r\n            /*setEstado(\r\n                <div className=\"alert alert-success\"> \r\n                        <p>{ejercicio.validacion}:&nbsp;\r\n                        <MathComponent tex={ejercicio.result_final}  display={false}/>\r\n                        </p>\r\n                </div>\r\n            );*/\r\n        }\r\n        else{\r\n                //error cuando la entrada es incorrecta\r\n        \r\n            setEstado(\r\n                    //error cuando la entrada es incorrecta\r\n                    \r\n                    <Alert variant=\"danger\">\r\n                        <p>{ejercicio.error}</p> \r\n                    </Alert>\r\n            );\r\n        }\r\n\r\n    }\r\n    return (\r\n        <>\r\n            \r\n            <Row  style={{color: \"hotpink\", padding: 0}}>\r\n                <Col xl= \"3\" style={{padding: 26.5}}>    \r\n                    <MathComponent tex={String.raw`${ejercicio.expresion}`}  display={false}/>\r\n                </Col>\r\n                <Col xl= \"5\" style={{padding: 0}}> \r\n                {hintsTerminado===null&&<div className=\"input-group\">\r\n                        <label htmlFor=\"label1\">(</label>\r\n                        <input style={{backgroundColor: \"#21232A\",border: \"none\",color:\"white\",textAlign:\"center\"}}\r\n                            id=\"label1\"\r\n                            type=\"text\" \r\n                            name=\"name\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Ingrese cuadrado 1\"\r\n                            autoComplete= \"off\"\r\n                            ref= {respuesta1}\r\n                            disabled = {paso1Valido!=null}\r\n                        ></input>\r\n                        <label htmlFor=\"label2\">){<MathComponent tex={String.raw`^2`}  display={false}/>}  - (</label>\r\n                        <input style={{backgroundColor: \"#21232A\",border: \"none\",color:\"white\",textAlign:\"center\"}}\r\n                            id=\"label2\"\r\n                            type=\"text\" \r\n                            name=\"name\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Ingrese cuadrado 2\"\r\n                            autoComplete= \"off\"\r\n                            ref= {respuesta2}\r\n                            disabled = {paso1Valido!=null}\r\n                        ></input>\r\n                        <label htmlFor=\"label3\">){<MathComponent tex={String.raw`^2`}  display={false}/>} &nbsp;</label>\r\n                        {paso1Valido==null&&<button \r\n                            id=\"label3\"\r\n                            type=\"submit\" \r\n                            className=\"btn btn-outline-success\"\r\n                            onClick={comparar}\r\n                        >\r\n                            Aceptar\r\n                        </button>}\r\n                    </div>}\r\n                    {hintsTerminado!==null&& <div> <p>{ejercicio.hint_solicitado[hintsTerminado]}</p> </div>}         \r\n                </Col>\r\n                <Col xl=\"4\" style={{padding: 0}}> \r\n                    {paso1Valido==null&&hintsTerminado===null&&<Hint ejercicio={ejercicio.hint_solicitado} setHintsTerminado ={setHintsTerminado}></Hint>}\r\n                </Col> \r\n            </Row>\r\n            {paso1Valido==null&&hintsTerminado===null&&estado} \r\n        </>\r\n    )\r\n}\r\n","import React, {useRef,useState} from 'react'\r\nimport Hint from '../../herramientas/Hint';\r\nimport {Col, Row,Alert } from 'react-bootstrap';\r\nimport {MathComponent} from 'mathjax-react';\r\n\r\nexport const DCpaso2 = ({ejercicio,setPaso2Valido, paso2Valido, hintsTerminado, setHintsTerminado}) => {\r\n    \r\n    const respuesta1 = useRef(null);\r\n    const respuesta2 = useRef(null);\r\n    const correcta = ejercicio.entrada;\r\n    const [estado, setEstado] = useState(null)\r\n    const comparar=()=>{\r\n        const entrada = [respuesta1.current.value.replace(/[*]| /g, \"\").toLowerCase(),respuesta2.current.value.replace(/[*]| /g, \"\").toLowerCase()];\r\n        \r\n        if (entrada[0]===correcta[0]&& entrada[1]===correcta[1]){\r\n            setPaso2Valido(\r\n                paso2Valido=\"Terminado\"\r\n            );\r\n            setEstado(\r\n                <div className=\"alert alert-success\"> \r\n                        <p>{ejercicio.validacion}</p>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n                setEstado(\r\n                    //error cuando la entrada es incorrecta\r\n                    <Alert variant=\"danger\">\r\n                        <p>{ejercicio.error}</p> \r\n                    </Alert>\r\n                );\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Row  style={{color: \"hotpink\", padding: 0}}>\r\n                <Col xl= \"3\" style={{padding: 26.5}}>    \r\n                    <MathComponent tex={String.raw`${ejercicio.expresion}`}  display={false}/>\r\n                </Col>\r\n                <Col xl= \"5\" style={{padding: 0}}> \r\n                {hintsTerminado===null&&<div className=\"input-group\">\r\n                        <label htmlFor=\"label1\">(</label>\r\n                        <input style={{backgroundColor: \"#21232A\",border: \"none\",color:\"white\",textAlign:\"center\"}}\r\n                            id=\"label1\"\r\n                            type=\"text\" \r\n                            name=\"name\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Ingrese suma\"\r\n                            autoComplete= \"off\"\r\n                            ref= {respuesta1}\r\n                            disabled = {paso2Valido!=null}\r\n                        ></input>\r\n                        <label htmlFor=\"label2\">)(</label>\r\n                        <input style={{backgroundColor: \"#21232A\",border: \"none\",color:\"white\",textAlign:\"center\"}}\r\n                            id=\"label2\"\r\n                            type=\"text\" \r\n                            name=\"name\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Ingrese diferencia\"\r\n                            autoComplete= \"off\"\r\n                            ref= {respuesta2}\r\n                            disabled = {paso2Valido!=null}\r\n                        ></input>\r\n                        <label htmlFor=\"label3\">) &nbsp;</label>\r\n                        {paso2Valido==null&&<button \r\n                            id=\"label3\"\r\n                            type=\"submit\" \r\n                            className=\"btn btn-outline-success\"\r\n                            onClick={comparar}\r\n                        >\r\n                            Aceptar\r\n                        </button>}\r\n                    </div>}\r\n                    {hintsTerminado!==null&& <div> <p>{ejercicio.hint_solicitado[hintsTerminado]}</p> </div>}       \r\n                </Col>\r\n                <Col xl=\"4\" style={{padding: 0}}> \r\n                {paso2Valido==null&&hintsTerminado===null&&<Hint ejercicio={ejercicio.hint_solicitado} setHintsTerminado ={setHintsTerminado}></Hint>}\r\n                </Col> \r\n            </Row>\r\n            {hintsTerminado===null&&estado}\r\n        </>\r\n    )\r\n}\r\n","import React,{useState} from 'react';\r\nimport {Ejercicio2} from './EjerciciosDC';\r\nimport {MathComponent} from 'mathjax-react';\r\nimport './DiferenciaCuadrados.css';\r\n//import { DCejemplo } from './ejercicio/DCejemplo';\r\nimport { Breadcrumb, Accordion,Card } from 'react-bootstrap';\r\nimport { DCpaso1 } from './ejercicio/DCpaso1';\r\nimport { DCpaso2 } from './ejercicio/DCpaso2';\r\n\r\n//react functional component\r\nconst DC= ()=>{\r\n    //const ejemplo = Ejercicio1;\r\n    const ejercicio = Ejercicio2;\r\n    const [paso1Valido, setPaso1Valido] = useState(null);\r\n    const [paso2Valido, setPaso2Valido] = useState(null);\r\n    //const [eventKeys, setEventKeys] = useState(\"0\");\r\n    const [hintsTerminado,setHintsTerminado] = useState(null);\r\n    const [hintsTerminado2,setHintsTerminado2] = useState(null);\r\n    \r\n    return(\r\n        <div>\r\n            {/*\r\n            <DCejemplo ejemplo={ejemplo}></DCejemplo>\r\n            */}\r\n            \r\n            <Breadcrumb>\r\n                <Breadcrumb.Item >Factorización</Breadcrumb.Item>\r\n                <Breadcrumb.Item active>Diferencia de cuadrados</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n            <h3> {ejercicio.textoProblema} </h3>\r\n            <center><MathComponent tex={ejercicio.pasos[0].expresion} display={false} /></center>\r\n\r\n            \r\n            <Accordion defaultActiveKey={paso1Valido==null?\"0\":\"1\"} >\r\n                <Card bg= {paso1Valido==null?(hintsTerminado===null?\"secondary\":\"danger\"):\"success\"} style={{padding: 0}}>\r\n                    <Accordion.Toggle as={Card.Header} eventKey={paso1Valido==null?\"0\":\"1\"}>\r\n                        {ejercicio.pasos[0].paso}\r\n                        {paso1Valido!=null&&\"    ✔ \"}\r\n                        {hintsTerminado!=null&&\"    ❌ \"}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey={paso1Valido==null?\"0\":\"1\"} style={{padding: 1}}>\r\n                    <Card.Body style={{padding: 0}}>\r\n                        <DCpaso1 ejercicio={ejercicio.pasos[0]} setPaso1Valido={setPaso1Valido} paso1Valido={paso1Valido} hintsTerminado={hintsTerminado} setHintsTerminado={setHintsTerminado}>\r\n                        </DCpaso1>\r\n                    </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n\r\n                <Card bg={paso2Valido==null?(hintsTerminado2===null?\"secondary\":\"danger\"):\"success\"} style={{padding: 0}}>\r\n                    <Accordion.Toggle as={Card.Header}  eventKey={paso1Valido!=null?\"0\":\"1\"} >\r\n                        {ejercicio.pasos[1].paso}\r\n                        {paso2Valido!=null&&\"    ✔ \"}\r\n                        {hintsTerminado2!=null&&\"    ❌ \"}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey={paso1Valido!=null?\"0\":\"1\"} style={{padding: 1}}>\r\n                    <Card.Body style={{padding: 0}}>\r\n                    {paso1Valido!=null&&<DCpaso2 ejercicio={ejercicio.pasos[paso1Valido]} setPaso2Valido={setPaso2Valido} paso2Valido={paso2Valido} hintsTerminado={hintsTerminado2} setHintsTerminado={setHintsTerminado2}></DCpaso2>}\r\n                    </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </Accordion>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DC;","export const Ejercicio1 = {\r\n    prob_id : 4000,\r\n    titulo : \"Factorización por diferencia de cubos.\",\r\n    signo:\"-\",\r\n    dificultad:\"1\",\r\n    textoProblema: \"Texto problema/ejercicio, planteamiento\",\r\n    pasos: [\r\n        {\r\n            expresion: \"x^3-y^3\",\r\n            paso: \"Paso 1: identificar términos al cubo\",\r\n            explicacion:\"\",\r\n            result_final:\"(x)^3-(y)^3\",\r\n            hint_solicitado:[\"hint 1\",\r\n            \"hint 2\",\"los cubos son: (x)^3 - (y)^3\"],\r\n            soluciones:[{entrada:[\"x\",\"y\"],pasoSiguiente:\"1\"}],\r\n            error:\"no se han ingresado correctamente los términos que al cubos dan como resultado la expresión\",\r\n            validacion:\"Haz encontrado los términos al cubo\"\r\n        },\r\n        {\r\n            expresion: \"(x)^3-(y)^3\",\r\n            paso: \"Paso 2: ingresar la identidad (diferencia de cubos)\",\r\n            explicacion:\"\",\r\n            result_final:\"(x-y)(x^2+xy+y^2)\",\r\n            hint_solicitado:[\"hint 1\",\"hint 2\",\"(x-y)(x^2+xy+y^2)\"],\r\n            entrada:[\"x-y\",\"x^2+xy+y^2\"],\r\n            error:\"valores mal ingresados\",\r\n            validacion:\"Haz encontrado la diferencia de cubos\"\r\n        }\r\n    ]\r\n}\r\nexport const Ejercicio2 = {\r\n    prob_id : 4001,\r\n    titulo : \"Factorización por suma de cubos.\",\r\n    signo:\"+\",\r\n    dificultad:\"1\",\r\n    textoProblema: \"Texto problema/ejercicio, planteamiento\",\r\n    pasos: [\r\n        {\r\n            expresion: \"8x^3+y^3\",\r\n            paso: \"Paso 1: identificar términos al cubo\",\r\n            explicacion:\"\",\r\n            result_final:\"(2x)^3+(y)^3\",\r\n            hint_solicitado:[\"hint 1\",\"hint 2\",\"los cubos son: (2x)^3 + (y)^3, donde los valores a ingresar son x e y\"],\r\n            soluciones:[{entrada:[\"2x\",\"y\"],pasoSiguiente:\"1\"}],\r\n            error:\"no se han ingresado correctamente los términos que al cubos dan como resultado la expresión\",\r\n            validacion:\"Haz encontrado los términos al cubo\"\r\n        },\r\n        {\r\n            expresion: \"(2x)^3+(y)^3\",\r\n            paso: \"Paso 2: ingresar la identidad (suma de cubos)\",\r\n            explicacion:\"\",\r\n            result_final:\"(2x+y)(4x^2-2xy+y^2)\",\r\n            hint_solicitado:[\"hint 1\",\"hint 2\",\"Factorización por suma de cubos: (2x+y)(4x^2-2xy+y^2)\"],\r\n            entrada:[\"2x+y\",\"4x^2-2xy+y^2\"],\r\n            error:\"Valores mal ingresados\",\r\n            validacion:\"Haz encontrado la diferencia de cubos\"\r\n        }\r\n    ]\r\n}","import React, {useRef,useState} from 'react';\r\nimport Hint from '../../herramientas/Hint';\r\nimport {Col, Row,Alert } from 'react-bootstrap';\r\nimport {MathComponent} from 'mathjax-react';\r\n\r\nexport const DSCpaso1 = ({ejercicio, setPaso1Valido, paso1Valido, signo, hintsTerminado, setHintsTerminado}) => {\r\n    const respuesta1 = useRef(null);\r\n    const respuesta2 = useRef(null);\r\n    const [estado,setEstado] = useState(null);\r\n    //let idPasoSiguiente = null;\r\n    const correctas = ejercicio.soluciones.map((elemento)=>elemento.entrada);\r\n\r\n    const comparar=()=>{\r\n        const entrada = [respuesta1.current.value.replace(/[*]| /g, \"\").toLowerCase(),respuesta2.current.value.replace(/[*]| /g, \"\").toLowerCase()];\r\n        const valida = (element) =>((element[0] === entrada[0]) && (element[1] === entrada[1]));\r\n        if (correctas.some(valida)) {\r\n            setPaso1Valido(\r\n                paso1Valido=ejercicio.soluciones[correctas.findIndex(valida)].pasoSiguiente\r\n            );\r\n            /*setEstado(\r\n                <div className=\"alert alert-success\"> \r\n                        <p>{ejercicio.validacion}:&nbsp;\r\n                        <MathComponent tex={ejercicio.result_final}  display={false}/>\r\n                        </p>\r\n                </div>\r\n            );*/\r\n        }\r\n        \r\n        else{\r\n            setEstado(\r\n                //error cuando la entrada es incorrecta\r\n                <Alert variant=\"danger\">\r\n                    <p>{ejercicio.error}</p> \r\n                </Alert>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            \r\n            <Row  style={{color: \"hotpink\", padding: 0}}>\r\n                <Col xl= \"3\" style={{padding: 26.5}}>    \r\n                    <MathComponent tex={String.raw`${ejercicio.expresion}`}  display={false}/>\r\n                </Col>\r\n                <Col xl= \"5\" style={{padding: 0}}> \r\n                {hintsTerminado===null&&<div className=\"input-group\">\r\n                        <label htmlFor=\"label1\">(</label>\r\n                        <input style={{backgroundColor: \"#21232A\",border: \"none\",color:\"white\",textAlign:\"center\"}}\r\n                            id=\"label1\"\r\n                            type=\"text\" \r\n                            name=\"name\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Ingrese cubo 1\"\r\n                            autoComplete= \"off\"\r\n                            ref= {respuesta1}\r\n                            disabled = {paso1Valido!=null}\r\n                        ></input>\r\n                        <label htmlFor=\"label2\">){<MathComponent tex={String.raw`^3`}  display={false}/>}  {signo} (</label>\r\n                        <input style={{backgroundColor: \"#21232A\",border: \"none\",color:\"white\",textAlign:\"center\"}}\r\n                            id=\"label2\"\r\n                            type=\"text\" \r\n                            name=\"name\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Ingrese cubo 2\"\r\n                            autoComplete= \"off\"\r\n                            ref= {respuesta2}\r\n                            disabled = {paso1Valido!=null}\r\n                        ></input>\r\n                        <label htmlFor=\"label3\">){<MathComponent tex={String.raw`^3`}  display={false}/>} &nbsp;</label>\r\n                        {paso1Valido==null&&<button \r\n                            id=\"label3\"\r\n                            type=\"submit\" \r\n                            className=\"btn btn-outline-success\"\r\n                            onClick={comparar}\r\n                        >\r\n                            Aceptar\r\n                        </button>}\r\n                    </div>}\r\n                    {hintsTerminado!==null&& <div> <p>{ejercicio.hint_solicitado[hintsTerminado]}</p> </div>}       \r\n                </Col>\r\n                <Col xl=\"4\" style={{padding: 0}}> \r\n                    {paso1Valido==null&&hintsTerminado===null&&<Hint ejercicio={ejercicio.hint_solicitado} setHintsTerminado ={setHintsTerminado}></Hint>}\r\n                </Col> \r\n            </Row>\r\n            {paso1Valido==null&&hintsTerminado===null&&estado} \r\n        </>\r\n    )\r\n}\r\n","import React, {useRef,useState} from 'react'\r\nimport Hint from '../../herramientas/Hint';\r\nimport {Col, Row,Alert } from 'react-bootstrap';\r\nimport {MathComponent} from 'mathjax-react';\r\n\r\nexport const DSCpaso2 = ({ejercicio,setPaso2Valido, paso2Valido, hintsTerminado, setHintsTerminado}) => {\r\n    const respuesta1 = useRef(null);\r\n    const respuesta2 = useRef(null);\r\n    const correcta = ejercicio.entrada;\r\n    const [estado, setEstado] = useState(null)\r\n    const comparar=()=>{\r\n        const entrada = [respuesta1.current.value.replace(/[*]| /g, \"\").toLowerCase(),respuesta2.current.value.replace(/[*]| /g, \"\").toLowerCase()];\r\n     \r\n        if (entrada[0]===correcta[0]&& entrada[1]===correcta[1]){\r\n            setPaso2Valido(\r\n                paso2Valido=\"Terminado\"\r\n            );\r\n            setEstado(\r\n                <div className=\"alert alert-success\"> \r\n                        <p>{ejercicio.validacion}:&nbsp;\r\n                        <MathComponent tex={ejercicio.result_final}  display={false}/>\r\n                        </p>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n                setEstado(\r\n                    //error cuando la entrada es incorrecta\r\n                    <Alert variant=\"danger\">\r\n                        <p>{ejercicio.error}</p> \r\n                    </Alert>\r\n                );\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Row  style={{color: \"hotpink\", padding: 0}}>\r\n                <Col xl= \"3\" style={{padding: 26.5}}>    \r\n                    <MathComponent tex={String.raw`${ejercicio.expresion}`}  display={false}/>\r\n                </Col>\r\n                <Col xl= \"5\" style={{padding: 0}}> \r\n                {hintsTerminado===null&&<div className=\"input-group\">\r\n                        <label htmlFor=\"label1\">(</label>\r\n                        <input style={{backgroundColor: \"#21232A\",border: \"none\",color:\"white\",textAlign:\"center\"}}\r\n                            id=\"label1\"\r\n                            type=\"text\" \r\n                            name=\"name\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Ingrese factores binomios\"\r\n                            autoComplete= \"off\"\r\n                            ref= {respuesta1}\r\n                            disabled = {paso2Valido!=null}\r\n                        ></input>\r\n                        <label htmlFor=\"label2\">)(</label>\r\n                        <input \r\n                            style={{backgroundColor: \"#21232A\",border: \"none\",color:\"white\",textAlign:\"center\"}}\r\n                            id=\"label2\"\r\n                            type=\"text\" \r\n                            name=\"name\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Ingrese factores trinomios\"\r\n                            autoComplete= \"off\"\r\n                            ref= {respuesta2}\r\n                            disabled = {paso2Valido!=null}\r\n                        ></input>\r\n                        <label htmlFor=\"label3\">) &nbsp;</label>\r\n                        {paso2Valido==null&&<button \r\n                            id=\"label3\"\r\n                            type=\"submit\" \r\n                            className=\"btn btn-outline-success\"\r\n                            onClick={comparar}\r\n                        >\r\n                            Aceptar\r\n                        </button>}\r\n                    </div>}\r\n                    {hintsTerminado!==null&& <div> <p>{ejercicio.hint_solicitado[hintsTerminado]}</p> </div>}       \r\n                </Col>\r\n                <Col xl=\"4\" style={{padding: 0}}> \r\n                    {paso2Valido==null&&hintsTerminado===null&&<Hint ejercicio={ejercicio.hint_solicitado} setHintsTerminado ={setHintsTerminado}></Hint>}\r\n                </Col> \r\n            </Row>\r\n            {hintsTerminado===null&&estado}\r\n        </>\r\n    )\r\n}","import React,{useState} from 'react';\r\nimport {Ejercicio1,Ejercicio2} from './EjerciciosDSC';\r\nimport {MathComponent} from 'mathjax-react';\r\nimport { DSCejemplo } from './ejercicios/DSCejemplo';\r\nimport { Breadcrumb, Accordion,Card } from 'react-bootstrap';\r\nimport { DSCpaso1 } from './ejercicios/DSCpaso1';\r\nimport { DSCpaso2 } from './ejercicios/DSCpaso2';\r\n//import './DiferenciaCuadrados.css';\r\n\r\n\r\n//react functional component\r\nconst DSC= ()=>{\r\n    //const ejemplo = Ejercicio1;\r\n    const ejercicio = Ejercicio2;\r\n    const [paso1Valido, setPaso1Valido] = useState(null);\r\n    const [paso2Valido, setPaso2Valido] = useState(null);\r\n    const [hintsTerminado,setHintsTerminado] = useState(null);\r\n    const [hintsTerminado2,setHintsTerminado2] = useState(null);\r\n    \r\n    return(\r\n        <div>\r\n            {/*\r\n           <DSCejemplo ejemplo={ejemplo}></DSCejemplo>\r\n            */}\r\n            <Breadcrumb>\r\n                <Breadcrumb.Item >Factorización</Breadcrumb.Item>\r\n                <Breadcrumb.Item active>Diferencia y suma de cubos</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n            <h3> {ejercicio.textoProblema} </h3>\r\n            <center><MathComponent tex={ejercicio.pasos[0].expresion} display={false} /></center>\r\n\r\n            <Accordion defaultActiveKey=\"0\">\r\n                <Card bg={paso1Valido==null?(hintsTerminado===null?\"secondary\":\"danger\"):\"success\"} style={{padding: 0}}>\r\n                    <Accordion.Toggle as={Card.Header} eventKey={paso1Valido==null?\"0\":\"1\"}>\r\n                        {ejercicio.pasos[0].paso}\r\n                        {paso1Valido!=null&&\"    ✔ \"}\r\n                        {hintsTerminado!=null&&\"    ❌ \"}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey={paso1Valido==null?\"0\":\"1\"} style={{padding: 1}}>\r\n                    <Card.Body style={{padding: 0}}>\r\n                        <DSCpaso1 ejercicio={ejercicio.pasos[0]} setPaso1Valido={setPaso1Valido} paso1Valido={paso1Valido} signo={ejercicio.signo} hintsTerminado={hintsTerminado} setHintsTerminado={setHintsTerminado}></DSCpaso1>\r\n                    </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n\r\n                <Card bg={paso2Valido==null?(hintsTerminado2===null?\"secondary\":\"danger\"):\"success\"} style={{padding: 0}}>\r\n                    <Accordion.Toggle as={Card.Header} eventKey={paso1Valido!=null?\"0\":\"1\"}>\r\n                        {ejercicio.pasos[1].paso}\r\n                        {paso2Valido!=null&&\"    ✔ \"}\r\n                        {hintsTerminado2!=null&&\"    ❌ \"}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey={paso1Valido!=null?\"0\":\"1\"} style={{padding: 1}}>\r\n                    <Card.Body style={{padding: 0}}>\r\n                        {paso1Valido!=null&&<DSCpaso2 ejercicio={ejercicio.pasos[paso1Valido]} setPaso2Valido={setPaso2Valido} paso2Valido={paso2Valido} hintsTerminado={hintsTerminado2} setHintsTerminado={setHintsTerminado2}></DSCpaso2>}\r\n                    </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </Accordion>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DSC;","export const Ejercicio1 = {\r\n    prob_id : 5000,\r\n    titulo : \"Factorización por trinomios cuadráticos.\",\r\n    dificultad:\"1\",\r\n    textoProblema: \"Texto problema/ejercicio, planteamiento\",\r\n    pasos: [\r\n        {\r\n            id:\"0\",\r\n            expresion: \"x^2+8x+12\",\r\n            paso: \"Paso 1: identificar el valor de a en la expresión dada\",\r\n            //explicacion:\"Los valores de a, b y c provienen de una expresión cuadrática de la forma ax^2+bx+c\",\r\n            result_final:\"a=1\",\r\n            hint_solicitado:[\"hint 1\",\"hint 2\",\r\n            \"El valor de a es 1\"],\r\n            soluciones:[{entrada:[\"1\"],pasoSiguiente:\"1\"}],\r\n            error:\"no es el valor de a\",\r\n            //validacion:\"Haz encontrado el valor de a\"\r\n        },\r\n        {\r\n            id:\"1\",\r\n            expresion: \"x^2+8x+12\",\r\n            paso: \"Paso 2: identificar los valores de a, b y c de la expresión cuadrática\",\r\n            explicacion:\"Los valores de a, b y c provienen de una expresión cuadrática de la forma ax^2+bx+c\",\r\n            result_final:\"a=1, b=8, c=12\",\r\n            hint_solicitado:[\"El valor de a es el que acompaña al x^2\",\r\n            \"El valor de a es 1\",\"a =1, b=8, c=12\"],\r\n            soluciones:[{entrada:[\"1\",\"8\",\"12\"],pasoSiguiente:\"2\"}],\r\n            error:\"no son los valores correspondientes a los valores a, b y c\",\r\n            validacion:\"Haz identificado los valores de a, b y c\"\r\n        },\r\n        {\r\n            id:\"2\",\r\n            expresion: \"a=1, b=8, c=12\",\r\n            paso: \"Paso 3: calcular discriminante\",\r\n            explicacion:\"utilice la fórmula Δ= b^2-4ac, donde a es el término que acompaña al cuadrado, b es el término que acompaña a la variable y c es el valor de la constante\",\r\n            result_final:\"Δ=16\",\r\n            hint_solicitado:[\"reemplace en la fórmula Δ por: a=1, b=8 y c=12\",\r\n            \"\",\"el valor del discriminante es 16\"],\r\n            soluciones:[{entrada:\"16\",pasoSiguiente:\"3\"}],\r\n            error:\"no se han ingresado correctamente el discriminante de la expresión\",\r\n            validacion:\"Haz calculado correctamente el discriminante\"\r\n        },\r\n        {\r\n            id:\"3\",\r\n            expresion: \"Δ=16\",\r\n            paso: \"Paso 4: ¿a que caso corresponde el discriminante?\",\r\n            explicacion:\"Si el discriminante es mayor a 0 se puede factorizar y sus raices son diferentes, si es igual a 0 las dos raíces son iguales y si el discriminante es menor a 0, no es posible factorizar, por lo que tiene raices complejas\",\r\n            result_final:\"Este ejercicio posee 2 raíces diferentes, Δ>0\",\r\n            soluciones:[{entrada:\"1\",pasoSiguiente:\"4\"}],\r\n            error:\"caso mal ingresado\",\r\n            validacion:\"Haz descubierto a que caso corresponde el discriminante\"\r\n        },\r\n        {\r\n            id:\"4\",\r\n            expresion: \"Δ = 16, a = 1, b = 8, c = 12 \",\r\n            paso: \"Paso 5: Calcular los valores de x1 y x2\",\r\n            formula:[\"x_{1}=\\\\frac{-b+\\\\sqrt{Δ}}{2a}\",\"x_{2}=\\\\frac{-b-\\\\sqrt{Δ}}{2a}\"],\r\n            explicacion:\"\",\r\n            result_final:\"x_{1}=-2, x_{2}=-6\",\r\n            hint_solicitado:[\"utilice la fórmula cuadrática\",\"el valor de x1=-2 y x2=-6\"],\r\n            soluciones:[{entrada:[\"-2\",\"-6\"],pasoSiguiente:\"5\"}],\r\n            error:\"raices mal ingresadas\",\r\n            validacion:\"Haz encontrado las raices del polinomio\"\r\n        },\r\n        {\r\n            id:\"5\",\r\n            expresion: \"x_{1}=-2, x_{2}=-6\",\r\n            paso: \"Paso 6: Ingresar factorización por trinomios cuadráticos\",\r\n            explicacion:\"\",\r\n            result_final:\"(x+2)(x+6)\",\r\n            hint_solicitado:[\"hint 1\",\"hint 2\",\"(x+2)(x+6)\"],\r\n            entrada:[[\"x+2\",\"x+6\"],[\"x+6\",\"x+2\"]],\r\n            error:\"error en la factorización\",\r\n            validacion:\"Haz factorizado por trinomios cuadráticos correctamente\"\r\n        }\r\n    ]\r\n}","import React, {useState,useRef} from 'react'\r\nimport Hint from '../../herramientas/Hint';\r\nimport {Col, Row,Alert } from 'react-bootstrap';\r\nimport {MathComponent} from 'mathjax-react';\r\n\r\nexport const TCpaso1 = ({ejercicio, setPaso1Valido, paso1Valido, hintsTerminado, setHintsTerminado}) => {\r\n    const respuesta1 = useRef(null);\r\n    const [estado,setEstado] = useState(null);\r\n    //let idPasoSiguiente = null;\r\n    const correcta = ejercicio.soluciones.map((elemento)=>elemento.entrada);\r\n\r\n    const comparar=()=>{\r\n        const entrada = [respuesta1.current.value.replace(/[*]| /g, \"\").toLowerCase()];\r\n        const valida = (element) =>(element[0] === entrada[0]);\r\n        if (correcta.some(valida)) {\r\n            setPaso1Valido(\r\n                paso1Valido=ejercicio.soluciones[correcta.findIndex(valida)].pasoSiguiente\r\n            );\r\n            /*setEstado(\r\n                <div className=\"alert alert-success\"> \r\n                        <p>{ejercicio.validacion}:&nbsp;\r\n                        <MathComponent tex={ejercicio.result_final}  display={false}/>\r\n                        </p>\r\n                </div>\r\n            );*/\r\n        }\r\n        else{\r\n                setEstado(\r\n                    //error cuando la entrada es incorrecta\r\n                    <Alert variant=\"danger\">\r\n                        <p>{ejercicio.error}</p> \r\n                    </Alert>\r\n                );\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            \r\n            <Row  style={{color: \"hotpink\", padding: 0}}>\r\n                <Col xl= \"3\" style={{padding: 26.5}}>    \r\n                    <MathComponent tex={String.raw`${ejercicio.expresion}`}  display={false}/>\r\n                </Col>\r\n                <Col xl= \"5\" style={{padding: 0}}> \r\n                {hintsTerminado===null&&<div className=\"input-group\">\r\n                        <label htmlFor=\"label1\">a =</label>\r\n                        <input style={{backgroundColor: \"#21232A\",border: \"none\",color:\"white\",textAlign:\"center\"}}\r\n                            id=\"label1\"\r\n                            type=\"text\" \r\n                            name=\"name\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Ingrese a\"\r\n                            autoComplete= \"off\"\r\n                            ref= {respuesta1}\r\n                            disabled = {paso1Valido!=null}\r\n                        ></input>\r\n                        {paso1Valido==null&&<button \r\n                            id=\"label3\"\r\n                            type=\"submit\" \r\n                            className=\"btn btn-outline-success\"\r\n                            onClick={comparar}\r\n                        >\r\n                            Aceptar\r\n                        </button>}\r\n                    </div>}\r\n                    {hintsTerminado!==null&& <div> <p>{ejercicio.hint_solicitado[hintsTerminado]}</p> </div>}       \r\n                </Col>\r\n                <Col xl=\"4\" style={{padding: 0}}> \r\n                {paso1Valido==null&&hintsTerminado===null&&<Hint ejercicio={ejercicio.hint_solicitado} setHintsTerminado ={setHintsTerminado}></Hint>}\r\n                </Col> \r\n            </Row>\r\n            {paso1Valido==null&&hintsTerminado===null&&estado} \r\n        </>\r\n    )\r\n}\r\n","import React, {useRef,useState} from 'react';\r\nimport Hint from '../../herramientas/Hint';\r\nimport {Col, Row,Alert } from 'react-bootstrap';\r\nimport {MathComponent} from 'mathjax-react';\r\n\r\nexport const TCpaso2 = ({ejercicio, setPaso2Valido, paso2Valido, hintsTerminado, setHintsTerminado}) => {\r\n    const respuesta1 = useRef(null);\r\n    const respuesta2 = useRef(null);\r\n    const respuesta3 = useRef(null);\r\n    const [estado,setEstado] = useState(null);\r\n    let idPasoSiguiente = null;\r\n    const correctas = ejercicio.soluciones.map((elemento)=>elemento.entrada);\r\n\r\n    const comparar=()=>{\r\n        const entrada = [respuesta1.current.value.replace(/[*]| /g, \"\").toLowerCase(),respuesta2.current.value.replace(/[*]| /g, \"\").toLowerCase(),respuesta3.current.value.replace(/[*]| /g, \"\").toLowerCase()];\r\n        const valida = (element) =>((element[0] === entrada[0]) && (element[1] === entrada[1])&& (element[2] === entrada[2]));\r\n        if (correctas.some(valida)) {\r\n            setPaso2Valido(\r\n                paso2Valido=ejercicio.soluciones[correctas.findIndex(valida)].pasoSiguiente\r\n            );\r\n            /*setEstado(\r\n                <div className=\"alert alert-success\"> \r\n                        <p>{ejercicio.validacion}:&nbsp;\r\n                        <MathComponent tex={ejercicio.result_final}  display={false}/>\r\n                        </p>\r\n                </div>\r\n            );*/\r\n        }\r\n        else{\r\n                setEstado(\r\n                    //error cuando la entrada es incorrecta\r\n                    <Alert variant=\"danger\">\r\n                        <p>{ejercicio.error}</p> \r\n                    </Alert>\r\n                );\r\n        }\r\n\r\n    }\r\n    return (\r\n        <>\r\n            \r\n            <Row  style={{color: \"hotpink\", padding: 0}}>\r\n                <Col xl= \"3\" style={{padding: 26.5}}>    \r\n                    <MathComponent tex={String.raw`${ejercicio.expresion}`}  display={false}/>\r\n                </Col>\r\n                <Col xl= \"5\" style={{padding: 0}}> \r\n                {hintsTerminado===null&&<div className=\"input-group\">\r\n                        <label htmlFor=\"label1\">a =</label>\r\n                        <input style={{backgroundColor: \"#21232A\",border: \"none\",color:\"white\",textAlign:\"center\"}}\r\n                            id=\"label1\"\r\n                            type=\"text\" \r\n                            name=\"name\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Ingrese a\"\r\n                            autoComplete= \"off\"\r\n                            ref= {respuesta1}\r\n                            disabled = {paso2Valido!=null}\r\n                        ></input>\r\n                        <label htmlFor=\"label2\"> , b =</label>\r\n                        <input style={{backgroundColor: \"#21232A\",border: \"none\",color:\"white\",textAlign:\"center\"}}\r\n                            id=\"label2\"\r\n                            type=\"text\" \r\n                            name=\"name\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Ingrese b\"\r\n                            autoComplete= \"off\"\r\n                            ref= {respuesta2}\r\n                            disabled = {paso2Valido!=null}\r\n                        ></input>\r\n                        <label htmlFor=\"label3\">, c = &nbsp;</label>\r\n                        <input style={{backgroundColor: \"#21232A\",border: \"none\",color:\"white\",textAlign:\"center\"}}\r\n                            id=\"label2\"\r\n                            type=\"text\" \r\n                            name=\"name\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Ingrese c\"\r\n                            autoComplete= \"off\"\r\n                            ref= {respuesta3}\r\n                            disabled = {paso2Valido!=null}\r\n                        ></input>\r\n                        {paso2Valido==null&&<button \r\n                            id=\"label3\"\r\n                            type=\"submit\" \r\n                            className=\"btn btn-outline-success\"\r\n                            onClick={comparar}\r\n                        >\r\n                            Aceptar\r\n                        </button>}\r\n                    </div>}\r\n                    {hintsTerminado!==null&& <div> <p>{ejercicio.hint_solicitado[hintsTerminado]}</p> </div>}       \r\n                </Col>\r\n                <Col xl=\"4\" style={{padding: 0}}> \r\n                {paso2Valido==null&&hintsTerminado===null&&<Hint ejercicio={ejercicio.hint_solicitado} setHintsTerminado ={setHintsTerminado}></Hint>}\r\n                </Col> \r\n            </Row>\r\n            {paso2Valido==null&&hintsTerminado===null&&estado} \r\n        </>\r\n    )\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport {MathComponent} from 'mathjax-react';\r\nimport { Col, Row,Alert } from 'react-bootstrap';\r\nimport Hint from '../../herramientas/Hint';\r\n\r\nexport const TCpaso3 = ({ejercicio, setPaso3Valido, paso3Valido, hintsTerminado, setHintsTerminado}) => {\r\n    \r\n    //hook para obtener un input\r\n    const respuesta = useRef(null);\r\n    //hook para volver a renderizar cuando el estudiante ingrese una respuesta \r\n    const [estado,setEstado] = useState(null);\r\n    //resultado correcto (hay que validar para todas las entradas posibles)\r\n    const correcta = ejercicio.soluciones[0].entrada;\r\n    let idPasoSiguiente = null;\r\n    //esta función se ejecuta cuando se oprime el boton aceptar \r\n    const comparar=()=>{\r\n        //parametro de entrada recibido, replace elimina \"espacios\" y \"*\", trabajar todo en minuscula\r\n        const entrada = respuesta.current.value.replace(/[*]| /g, \"\").toLowerCase();\r\n\r\n\r\n        if (correcta===entrada) {\r\n            //valida que la entrada es correcta\r\n            setPaso3Valido(\r\n                paso3Valido=ejercicio.soluciones[0].pasoSiguiente\r\n            );\r\n            /*setEstado(\r\n                <div className=\"alert alert-success\"> \r\n                    <p>{ejercicio.validacion}:&nbsp;\r\n                    <MathComponent tex={ejercicio.soluciones[0].entrada}  display={false}/>\r\n                    </p>\r\n                    <p>\r\n                    Entonces el discriminante es:\r\n                    &nbsp;\r\n                    <MathComponent tex={ejercicio.result_final}  display={false}/>\r\n                    </p>\r\n                </div>\r\n            );*/\r\n        }\r\n        else{\r\n                setEstado(\r\n                    //error cuando la entrada es incorrecta\r\n                    <Alert variant=\"danger\">\r\n                        <p>{ejercicio.error}</p> \r\n                    </Alert>\r\n                );\r\n            \r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            \r\n            <Row  style={{ padding: 0}}>\r\n                <Col md=\"12\" xl=\"3\" style={{padding: 26.5}}>    \r\n                    <MathComponent tex={String.raw`${ejercicio.expresion}`}  display={false}/>\r\n                </Col>\r\n                <Col md=\"5\" xl=\"4\" style={{padding: 0}}> \r\n                {hintsTerminado===null&&<div className=\"input-group\">\r\n                        <label htmlFor=\"label3\">Δ = &nbsp;</label>\r\n                        <input style={{backgroundColor: \"#21232A\",border: \"none\",color:\"white\",textAlign:\"center\"}}\r\n                            type=\"text\" \r\n                            name=\"name\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Ingrese discriminante\"\r\n                            autoComplete= \"off\"\r\n                            ref= {respuesta}\r\n                            disabled = {paso3Valido!=null}\r\n                        ></input>\r\n                        {paso3Valido==null&&<button \r\n                            type=\"submit\" \r\n                            className=\"btn btn-outline-success\"\r\n                            onClick={comparar}\r\n                        >\r\n                            Aceptar\r\n                        </button>}\r\n                      </div>}\r\n                      {hintsTerminado!==null&& <div> <p>{ejercicio.hint_solicitado[hintsTerminado]}</p> </div>}        \r\n                </Col>\r\n                <Col md = \"7\" xl=\"5\" style={{padding: 0}}> \r\n                {paso3Valido==null&&hintsTerminado===null&&<Hint ejercicio={ejercicio.hint_solicitado} setHintsTerminado ={setHintsTerminado}></Hint>}\r\n                </Col> \r\n                {paso3Valido==null&&hintsTerminado===null&&estado}\r\n            </Row>  \r\n           \r\n        </>\r\n    )\r\n}","import React,{useState} from 'react'\r\nimport { Col, Row, Form, Alert } from 'react-bootstrap';\r\n\r\nexport const TCpaso4 = ({ejercicio,setPaso4Valido, paso4Valido}) => {\r\n    let idPasoSiguiente = null;\r\n    const [estado,setEstado] = useState(null);\r\n    const comparar = () =>{\r\n        if(document.getElementById(ejercicio.soluciones[0].entrada).checked){\r\n             setPaso4Valido(\r\n                paso4Valido=ejercicio.soluciones[0].pasoSiguiente\r\n            );\r\n            /*setEstado(\r\n                <div className=\"alert alert-success\"> \r\n                        <p>{ejercicio.validacion}:&nbsp;\r\n                        {ejercicio.result_final}\r\n                        </p>\r\n                </div>\r\n            );*/\r\n        }\r\n        else{\r\n            setEstado(\r\n                //error cuando la entrada es incorrecta\r\n                <Alert variant=\"danger\">\r\n                    <p>{ejercicio.error}</p> \r\n                </Alert>\r\n            );\r\n\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Row  style={{padding: 0}}>\r\n                <Col style={{padding: 40}}>\r\n                    <Form.Check\r\n                    type=\"radio\"\r\n                    label=\"Factorizable con diferentes raices\"\r\n                    name=\"formHorizontalRadios\"\r\n                    id=\"1\" style={{padding: 0}}\r\n                    disabled = {paso4Valido!=null}\r\n                    />\r\n                    <Form.Check\r\n                    type=\"radio\"\r\n                    label=\"Factorizable con raices iguales\"\r\n                    name=\"formHorizontalRadios\"\r\n                    id=\"2\" style={{padding: 0}}\r\n                    disabled = {paso4Valido!=null}\r\n                    />\r\n                    <Form.Check\r\n                    type=\"radio\"\r\n                    label=\"No es factorizable (raíces complejas)\"\r\n                    name=\"formHorizontalRadios\"\r\n                    id=\"3\" style={{padding: 0}}\r\n                    disabled = {paso4Valido!=null}\r\n                    />\r\n                </Col>\r\n                <Col style={{margin: 40}}>\r\n\r\n                {paso4Valido==null&&<button className=\"btn btn-outline-success\" onClick={comparar}>Aceptar</button>}\r\n                </Col>\r\n            </Row>\r\n            {paso4Valido==null&&estado}\r\n        </>\r\n    )\r\n}\r\n","import React, {useRef,useState} from 'react';\r\nimport {Col, Row,Alert } from 'react-bootstrap';\r\nimport {MathComponent} from 'mathjax-react';\r\nimport Hint from '../../herramientas/Hint';\r\n\r\nexport const TCpaso5 = ({ejercicio, setPaso5Valido, paso5Valido, hintsTerminado, setHintsTerminado}) => {\r\n    const respuesta1 = useRef(null);\r\n    const respuesta2 = useRef(null);\r\n    const [estado,setEstado] = useState(null);\r\n    let idPasoSiguiente = null;\r\n    const correctas = ejercicio.soluciones.map((elemento)=>elemento.entrada);\r\n    const comparar=()=>{\r\n        const entrada = [respuesta1.current.value.replace(/[*]| /g, \"\").toLowerCase(),respuesta2.current.value.replace(/[*]| /g, \"\").toLowerCase()];\r\n        const valida = (element) =>(((element[0] === entrada[0]) && (element[1] === entrada[1])) || ((element[0] === entrada[1]) && (element[1] === entrada[0])));\r\n        if (correctas.some(valida)) {\r\n            setPaso5Valido(\r\n                paso5Valido=ejercicio.soluciones[correctas.findIndex(valida)].pasoSiguiente\r\n            );\r\n            /*setEstado(\r\n                <div className=\"alert alert-success\"> \r\n                        <p>{ejercicio.validacion}:&nbsp;\r\n                        <MathComponent tex={ejercicio.result_final}  display={false}/>\r\n                        </p>\r\n                </div>\r\n            );*/\r\n        }\r\n        else{\r\n                setEstado(\r\n                    //error cuando la entrada es incorrecta\r\n                    <Alert variant=\"danger\">\r\n                        <p>{ejercicio.error}</p> \r\n                    </Alert>\r\n                );\r\n        }\r\n\r\n    }\r\n    return (\r\n        <>\r\n            \r\n            <Row  style={{color: \"hotpink\", padding: 0}}>\r\n                <Col xl= \"3\" style={{padding: 26.5}}>\r\n                    <p>{ejercicio.expresion}</p>    \r\n                </Col>\r\n                <Col xl= \"5\" style={{padding: 0}}> \r\n                {hintsTerminado===null&&<div className=\"input-group\">\r\n                        <label htmlFor=\"label1\"><MathComponent tex=\"x_{1} = \" display={false}/></label>\r\n                        <input style={{backgroundColor: \"#21232A\",border: \"none\",color:\"white\",textAlign:\"center\"}}\r\n                            id=\"label1\"\r\n                            type=\"text\" \r\n                            name=\"name\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Ingrese cuadrado 1\"\r\n                            autoComplete= \"off\"\r\n                            ref= {respuesta1}\r\n                            disabled = {paso5Valido!=null}\r\n                        ></input>\r\n                        <label htmlFor=\"label2\">, {<MathComponent tex=\"x_{2} = \"  display={false}/>}</label>\r\n                        <input style={{backgroundColor: \"#21232A\",border: \"none\",color:\"white\",textAlign:\"center\"}}\r\n                            id=\"label2\"\r\n                            type=\"text\" \r\n                            name=\"name\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Ingrese cuadrado 2\"\r\n                            autoComplete= \"off\"\r\n                            ref= {respuesta2}\r\n                            disabled = {paso5Valido!=null}\r\n                        ></input>\r\n                        <label htmlFor=\"label3\"> &nbsp;</label>\r\n                        {paso5Valido==null&&<button \r\n                            id=\"label3\"\r\n                            type=\"submit\" \r\n                            className=\"btn btn-outline-success\"\r\n                            onClick={comparar}\r\n                        >\r\n                            Aceptar\r\n                        </button>}\r\n                    </div>}\r\n                    {hintsTerminado!==null&& <div> <p>{ejercicio.hint_solicitado[hintsTerminado]}</p> </div>}       \r\n                </Col>\r\n                <Col xl=\"4\" style={{padding: 0}}> \r\n                {paso5Valido==null&&hintsTerminado===null&&<Hint ejercicio={ejercicio.hint_solicitado} setHintsTerminado ={setHintsTerminado}></Hint>}\r\n                </Col> \r\n            </Row>\r\n            {paso5Valido==null&&hintsTerminado===null&&estado} \r\n        </>\r\n    )\r\n}\r\n","import React, {useRef,useState} from 'react';\r\nimport {Col, Row,Alert } from 'react-bootstrap';\r\nimport {MathComponent} from 'mathjax-react';\r\nimport Hint from '../../herramientas/Hint';\r\n\r\nexport const TCpaso6 = ({ejercicio,setPaso6Valido, paso6Valido, hintsTerminado, setHintsTerminado}) => {\r\n    const respuesta1 = useRef(null);\r\n    const respuesta2 = useRef(null);\r\n    const [estado,setEstado] = useState(null);\r\n    const correctas = ejercicio.entrada;\r\n    const comparar=()=>{\r\n        const entrada = [respuesta1.current.value.replace(/[*]| /g, \"\").toLowerCase(),respuesta2.current.value.replace(/[*]| /g, \"\").toLowerCase()];\r\n        const valida = (element) =>(((element[0] === entrada[0]) && (element[1] === entrada[1])) || ((element[0] === entrada[1]) && (element[1] === entrada[0])));\r\n        if (correctas.some(valida)) {\r\n            setEstado(\r\n                <div className=\"alert alert-success\"> \r\n                        <p>{ejercicio.validacion}:&nbsp;\r\n                        <MathComponent tex={ejercicio.result_final}  display={false}/>\r\n                        </p>\r\n                </div>\r\n            );\r\n            setPaso6Valido(\r\n                paso6Valido=\"Terminado\"\r\n            );\r\n        }\r\n        else{\r\n                setEstado(\r\n                    //error cuando la entrada es incorrecta\r\n                    <Alert variant=\"danger\">\r\n                        <p>{ejercicio.error}</p> \r\n                    </Alert>\r\n                );\r\n        }\r\n\r\n    }\r\n    return (\r\n        <>\r\n            \r\n            <Row  style={{color: \"hotpink\", padding: 0}}>\r\n                <Col xl= \"3\" style={{padding: 26.5}}>\r\n                    <MathComponent tex={String.raw`${ejercicio.expresion}`}  display={false}/>   \r\n                </Col>\r\n                <Col xl= \"5\" style={{padding: 0}}> \r\n                {hintsTerminado===null&&<div className=\"input-group\">\r\n                        <label htmlFor=\"label1\">(</label>\r\n                        <input style={{backgroundColor: \"#21232A\",border: \"none\",color:\"white\",textAlign:\"center\"}}\r\n                            id=\"label1\"\r\n                            type=\"text\" \r\n                            name=\"name\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Ingrese cuadrado 1\"\r\n                            autoComplete= \"off\"\r\n                            ref= {respuesta1}\r\n                            disabled = {paso6Valido!=null}\r\n                        ></input>\r\n                        <label htmlFor=\"label2\">)(</label>\r\n                        <input style={{backgroundColor: \"#21232A\",border: \"none\",color:\"white\",textAlign:\"center\"}}\r\n                            id=\"label2\"\r\n                            type=\"text\" \r\n                            name=\"name\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Ingrese cuadrado 2\"\r\n                            autoComplete= \"off\"\r\n                            ref= {respuesta2}\r\n                            disabled = {paso6Valido!=null}\r\n                        ></input>\r\n                        <label htmlFor=\"label3\">) &nbsp;</label>\r\n                        {paso6Valido==null&&<button \r\n                            id=\"label3\"\r\n                            type=\"submit\" \r\n                            className=\"btn btn-outline-success\"\r\n                            onClick={comparar}\r\n                        >\r\n                            Aceptar\r\n                        </button>}\r\n                    </div>}\r\n                    {hintsTerminado!==null&& <div> <p>{ejercicio.hint_solicitado[hintsTerminado]}</p> </div>}       \r\n                </Col>\r\n                <Col xl=\"4\" style={{padding: 0}}> \r\n                {paso6Valido==null&&hintsTerminado===null&&<Hint ejercicio={ejercicio.hint_solicitado} setHintsTerminado ={setHintsTerminado}></Hint>}\r\n                </Col> \r\n            </Row>\r\n            {hintsTerminado===null&&estado} \r\n        </>\r\n    )\r\n}\r\n","import React,{useState} from 'react';\r\nimport {Ejercicio1} from './EjerciciosTC';\r\nimport {MathComponent} from 'mathjax-react';\r\n//import { TCejemplo } from './ejercicio/TCejemplo';\r\nimport { Breadcrumb, Accordion,Card } from 'react-bootstrap';\r\nimport { TCpaso1 } from './ejercicio/TCpaso1';\r\nimport { TCpaso2 } from './ejercicio/TCpaso2';\r\nimport { TCpaso3 } from './ejercicio/TCpaso3';\r\nimport { TCpaso4 } from './ejercicio/TCpaso4';\r\nimport { TCpaso5 } from './ejercicio/TCpaso5';\r\nimport { TCpaso6 } from './ejercicio/TCpaso6';\r\n\r\n\r\n//react functional component\r\nconst TC= ()=>{\r\n    //const ejemplo = Ejercicio1;\r\n    const ejercicio = Ejercicio1;\r\n    const [paso1Valido, setPaso1Valido] = useState(null);\r\n    const [paso2Valido, setPaso2Valido] = useState(null);\r\n    const [paso3Valido, setPaso3Valido] = useState(null);\r\n    const [paso4Valido, setPaso4Valido] = useState(null);\r\n    const [paso5Valido, setPaso5Valido] = useState(null);\r\n    const [paso6Valido, setPaso6Valido] = useState(null);\r\n    const [hintsTerminado,setHintsTerminado] = useState(null);\r\n    const [hintsTerminado2,setHintsTerminado2] = useState(null);\r\n    const [hintsTerminado3,setHintsTerminado3] = useState(null);\r\n    const [hintsTerminado5,setHintsTerminado5] = useState(null);\r\n    const [hintsTerminado6,setHintsTerminado6] = useState(null);\r\n\r\n\r\n    return(\r\n        <div>\r\n            {/*Ejemplo diferencia de cubos \r\n            <TCejemplo ejemplo={ejemplo}></TCejemplo>\r\n            */}\r\n            <Breadcrumb>\r\n                <Breadcrumb.Item >Factorización</Breadcrumb.Item>\r\n                <Breadcrumb.Item active>Trinomios cuadráticos</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n\r\n            <h3> {ejercicio.textoProblema} </h3>\r\n            <center><MathComponent tex={ejercicio.pasos[0].expresion} display={false} /></center>\r\n            \r\n            <Accordion defaultActiveKey=\"0\">\r\n\r\n                <Card bg={paso1Valido==null?(hintsTerminado===null?\"secondary\":\"danger\"):\"success\"} style={{padding: 0}}>\r\n                    <Accordion.Toggle as={Card.Header} eventKey={paso1Valido==null?\"0\":\"1\"}>\r\n                        {ejercicio.pasos[0].paso}\r\n                        {paso1Valido!=null&&\"    ✔ \"}\r\n                        {hintsTerminado!=null&&\"    ❌ \"}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey={paso1Valido==null?\"0\":\"1\"} style={{padding: 1}}>\r\n                    <Card.Body style={{padding: 0}}>\r\n                        <TCpaso1 ejercicio={ejercicio.pasos[0]} setPaso1Valido={setPaso1Valido} paso1Valido={paso1Valido} hintsTerminado={hintsTerminado} setHintsTerminado={setHintsTerminado}>\r\n                        </TCpaso1>\r\n                    </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n\r\n                <Card bg={paso2Valido==null?(hintsTerminado2===null?\"secondary\":\"danger\"):\"success\"} style={{padding: 0}}>\r\n                    <Accordion.Toggle as={Card.Header} eventKey={paso1Valido!=null?(paso2Valido!=null?\"2\":\"0\"):\"2\"}>\r\n                        {ejercicio.pasos[1].paso}\r\n                        {paso2Valido!=null&&\"    ✔ \"}\r\n                        {hintsTerminado2!=null&&\"    ❌ \"}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey={paso1Valido!=null?(paso2Valido!=null?\"2\":\"0\"):\"2\"} style={{padding: 1}}>\r\n                    <Card.Body style={{padding: 0}}>\r\n                    {paso1Valido!=null&&<TCpaso2 ejercicio={ejercicio.pasos[1]} setPaso2Valido={setPaso2Valido} paso2Valido={paso2Valido} hintsTerminado={hintsTerminado2} setHintsTerminado={setHintsTerminado2}>\r\n                        </TCpaso2>}\r\n                    </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n\r\n                <Card bg={paso3Valido==null?(hintsTerminado3===null?\"secondary\":\"danger\"):\"success\"} style={{padding: 0}}>\r\n                    <Accordion.Toggle as={Card.Header} eventKey={paso2Valido!=null?(paso3Valido!=null?\"3\":\"0\"):\"3\"}>\r\n                        {ejercicio.pasos[ejercicio.pasos[1].soluciones[0].pasoSiguiente].paso}\r\n                        {paso3Valido!=null&&\"    ✔ \"}\r\n                        {hintsTerminado3!=null&&\"    ❌ \"}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey={paso2Valido!=null?(paso3Valido!=null?\"3\":\"0\"):\"3\"}  style={{padding: 1}}>\r\n                    <Card.Body style={{padding: 0}}>\r\n                    {paso2Valido!=null&&<TCpaso3 ejercicio={ejercicio.pasos[2]} setPaso3Valido={setPaso3Valido} paso3Valido={paso3Valido} hintsTerminado={hintsTerminado3} setHintsTerminado={setHintsTerminado3}></TCpaso3>}\r\n                    </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n\r\n\r\n                <Card bg={paso4Valido==null?\"secondary\":\"success\"} style={{padding: 0}}>\r\n                    <Accordion.Toggle as={Card.Header} eventKey={paso3Valido!=null?(paso4Valido!=null?\"4\":\"0\"):\"4\"}>\r\n                        {ejercicio.pasos[3].paso}\r\n                        {paso4Valido!=null&&\"    ✔ \"}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey={paso3Valido!=null?(paso4Valido!=null?\"4\":\"0\"):\"4\"} style={{padding: 1}}>\r\n                    <Card.Body style={{padding: 0}}>\r\n                    {paso3Valido!=null&&<TCpaso4 ejercicio={ejercicio.pasos[3]} setPaso4Valido={setPaso4Valido} paso4Valido={paso4Valido}></TCpaso4>}\r\n                    </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n\r\n                <Card bg={paso5Valido==null?(hintsTerminado5===null?\"secondary\":\"danger\"):\"success\"} style={{padding: 0}}>\r\n                    <Accordion.Toggle as={Card.Header} eventKey={paso4Valido!=null?(paso5Valido!=null?\"5\":\"0\"):\"5\"}>\r\n                        {ejercicio.pasos[4].paso}\r\n                        {paso5Valido!=null&&\"    ✔ \"}\r\n                        {hintsTerminado5!=null&&\"    ❌ \"}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey={paso4Valido!=null?(paso5Valido!=null?\"5\":\"0\"):\"5\"} style={{padding: 1}}>\r\n                    <Card.Body style={{padding: 0}}>\r\n                    {paso4Valido!=null&&<TCpaso5 ejercicio={ejercicio.pasos[4]} setPaso5Valido={setPaso5Valido} paso5Valido={paso5Valido} hintsTerminado={hintsTerminado5} setHintsTerminado={setHintsTerminado5}></TCpaso5>}\r\n                    </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n\r\n                <Card bg={paso6Valido==null?(hintsTerminado6===null?\"secondary\":\"danger\"):\"success\"} style={{padding: 0}}>\r\n                    <Accordion.Toggle as={Card.Header} eventKey={paso5Valido!=null?\"0\":\"6\"}>\r\n                        {ejercicio.pasos[5].paso}\r\n                        {paso6Valido!=null&&\"    ✔ \"}\r\n                        {hintsTerminado6!=null&&\"    ❌ \"}\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey={paso5Valido!=null?\"0\":\"6\"} style={{padding: 1}}>\r\n                    <Card.Body style={{padding: 0}}>\r\n                    {paso5Valido!=null&&<TCpaso6 ejercicio={ejercicio.pasos[5]} setPaso6Valido={setPaso6Valido} paso6Valido={paso6Valido} hintsTerminado={hintsTerminado6} setHintsTerminado={setHintsTerminado6}></TCpaso6>}\r\n                    </Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </Accordion>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TC; ","export const Ejercicio1 = {\r\n    prob_id : 1000,\r\n    titulo : \"Factorización por factor común.\",\r\n    textoProblema: \"Texto problema/ejercicio, planteamiento\",\r\n    expresion: \"6xy^2 - 15x^2y + 21x^2y^2\",\r\n    paso: \"Paso 1: Ingrese el factor común de la siguiente expresión: \",\r\n    //explicacion:\"En este caso todos los términos de la expresión algebraica presentan un factor común, la tarea es encontrar dicho factor común para luego factorizar.\",\r\n    //result_variable:[\"3\",\"x\",\"y\",\"3x\",\"3y\",\"xy\"],\r\n    //hint_result_var:\"Aún la ecuación es factorizable, añada otro factor común\",\r\n    result_final:\"(3xy)(2y-5x+7xy)\",\r\n    hint_solicitado:[\"Un factor común de esta ecuación es 3, pero la ecuación todavía es factorizable\",\"Otro factor común es 3x, pero todavía se puede agregar otro valor al factor común\",\"El factor común de la expresión es 3xy\"],\r\n    entrada:[\"3xy\",\"3yx\"],\r\n    error:\"Factor común incorrecto, ingrese el factor común correspondiente a la expresión dada\",\r\n    validacion:\"Haz encontrado el factor común\",\r\n    dificultad:\"3\"\r\n}\r\n\r\nexport const Ejercicio2 = {\r\n    prob_id : 1001,\r\n    titulo : \"Factorización por factor común\",\r\n    textoProblema: \"Texto problema/ejercicio, planteamiento\",\r\n    expresion: \"\\\\frac{5x^6}{3y^2} - \\\\frac{10x^2}{21y}- \\\\frac{20x^3}{9y^4}\",\r\n    paso: \"Ingrese el factor común de la siguiente expresión: \",\r\n    //explicacion:\"En este caso todos los términos de la expresión algebraica presentan un factor común, la tarea es encontrar dicho factor común para luego factorizar\",\r\n    //result_variable:[\"5\",\"5x\",\"5x^2\",\"1/3\",\"(1)/(3)\",\"5/3\",\"(5)/(3)\",\"5x/3\",\"(5x)/(3)\",\"5x^2/3\",\"(5x^2)/(3)\",\"5/(3y)\",\"(5)/(3y)\",\"5x/(3y)\",\"(5x)/(3y)\"],\r\n    //hint_result_var:\"Aún la ecuación es factorizable, añada otro factor común\",\r\n    result_final:\"( \\\\frac{5x^2}{3y} )( \\\\frac{x^4}{y} - \\\\frac{2}{7} - \\\\frac{4x}{3y^3} )\",\r\n    hint_solicitado:[\"Un factor común de esta ecuación es 5/3, pero la ecuación todavía es factorizable\",\"Otro factor común es 5x^2/3, pero todavía se puede agregar otro valor al factor común\",\"El factor común de la expresión es (5x^2)/(3y)\"],\r\n    entrada:[\"(5x^2)/(3y)\" ,\"5x^2/(3y)\"],\r\n    error:\"Factor común incorrecto, ingrese el factor común correspondiente a la expresión dada\",\r\n    validacion:\"Haz encontrado el factor común\",\r\n    dificultad:\"3\"\r\n  \r\n}\r\nexport const Ejercicio3 = {\r\n    prob_id : 1002,\r\n    titulo : \"Factorización por factor común\",\r\n    textoProblema: \"Texto problema/ejercicio, planteamiento\",\r\n    expresion: \"2x^2y+3x^2z\",\r\n    paso: \"Ingrese el factor común de la siguiente expresión: \",\r\n    //explicacion:\"En este caso todos los términos de la expresión algebraica presentan un factor común, la tarea es encontrar dicho factor común para luego factorizar\",\r\n    //result_variable:[\"x\"],\r\n    //hint_result_var:\"Aún la ecuación es factorizable, añada otro factor común\",\r\n    result_final:\"(x^2)(2y+3z)\",\r\n    hint_solicitado:[\"Un factor común de esta ecuación es x, pero la ecuación todavía es factorizable\",\"Es un valor elevado al cuadrado\",\"El factor común de la expresión es x^2\"],\r\n    entrada:[\"x^2\"],\r\n    error:\"Factor común incorrecto, ingrese el factor común correspondiente a la expresión dada\",\r\n    validacion:\"Haz encontrado el factor común\",\r\n    dificultad:\"1\"\r\n}\r\nexport const Ejercicio4 = {\r\n    prob_id : 1003,\r\n    titulo : \"Factorización por factor común\",\r\n    textoProblema: \"Texto problema/ejercicio, planteamiento\",\r\n    expresion: \"12x+18y-24z\",\r\n    paso: \"Ingrese el factor común de la siguiente expresión: \",\r\n    //explicacion:\"En este caso todos los términos de la expresión algebraica presentan un factor común, la tarea es encontrar dicho factor común para luego factorizar\",\r\n    //result_variable:[\"3\"],\r\n    //hint_result_var:\"Aún la ecuación es factorizable, añada otro factor común\",\r\n    result_final:\"(6)(2x+3y-4z)\",\r\n    hint_solicitado:[\"El factor común de esta expresión es una constante\",\"Un factor común de esta ecuación es 3, pero la ecuación todavía es factorizable\",\"El factor común de la expresión es 6\"],\r\n    entrada:[\"6\"],\r\n    error:\"factor común incorrecto, ingrese el factor común correspondiente a la expresión dada\",\r\n    validacion:\"Haz encontrado el factor común\",\r\n    dificultad:\"1\"\r\n}\r\n\r\nexport const Ejercicio5 = {\r\n    prob_id : 1004,\r\n    titulo : \"Factorización por factor común\",\r\n    textoProblema: \"Texto problema/ejercicio, planteamiento\",\r\n    expresion: \"\\\\frac{x^{20}}{20} + \\\\frac{x^{10}}{10} - \\\\frac{x^5}{5}\",\r\n    paso: \"Ingrese el factor común de la siguiente expresión: \",\r\n    //explicacion:\"En este caso todos los términos de la expresión algebraica presentan un factor común, la tarea es encontrar dicho factor común para luego factorizar\",\r\n    //result_variable:[\"1/5\",\"x\",\"x^2\",\"x^3\",\"x^4\",\"x^5\",\"x/5\",\"x^2/5\",\"x^3/5\",\"x^4/5\"],\r\n    //hint_result_var:\"Aún la ecuación es factorizable, añada otro factor común\",\r\n    result_final:\"(\\\\frac{x^5}{5})(\\\\frac{x^15}{4} + \\\\frac{x^5}{2} - 1)\",\r\n    hint_solicitado:[\"Un factor común de esta ecuación es 1/5, pero la ecuación todavía es factorizable\",\"Otro factor común es x/5, pero todavía se puede agregar otro valor al factor común\",\"El factor común de la expresión es x^5/5\"],\r\n    entrada:[\"x^5/5\",\"(x^5)/5\",\"(x^5)/(5)\"],\r\n    error:\"Factor común incorrecto, ingrese el factor común correspondiente a la expresión dada\",\r\n    validacion:\"Haz encontrado el factor común\",\r\n    dificultad:\"4\"\r\n}\r\n\r\nexport const Ejercicio6 = {\r\n    prob_id : 1005,\r\n    titulo : \"Factorización por factor común\",\r\n    textoProblema: \"Texto problema/ejercicio, planteamiento\",\r\n    expresion: \"10y^5-30xy^5-15xy^6\",\r\n    paso: \"Ingrese el factor común de la siguiente expresión: \",\r\n    //explicacion:\"En este caso todos los términos de la expresión algebraica presentan un factor común, la tarea es encontrar dicho factor común para luego factorizar\",\r\n    //result_variable:[\"5\",\"y\",\"y^2\",\"y^3\",\"y^4\",\"y^5\",\"5y\",\"5y^2\",\"5y^3\",\"5y^4\"],\r\n    //hint_result_var:\"Aún la ecuación es factorizable, añada otro factor común\",\r\n    result_final:\"(5y^5)(2-6x-3xy)\",\r\n    hint_solicitado:[\"Un factor común de esta ecuación es 5, pero la ecuación todavía es factorizable\",\"Otro factor común es 5y, pero todavía se puede agregar otro valor al factor común\",\"El factor común de la expresión es 5y^5\"],\r\n    entrada:[\"5y^5\"],\r\n    error:\"Factor común incorrecto, ingrese el factor común correspondiente a la expresión dada\",\r\n    validacion:\"Haz encontrado el factor común\",\r\n    dificultad:\"3\"\r\n}\r\n\r\nexport const Ejercicio7 = {\r\n    prob_id : 1006,\r\n    titulo : \"Factorización por factor común\",\r\n    textoProblema: \"Texto problema/ejercicio, planteamiento\",\r\n    expresion: \"6x^2yz-30xy^2z^2+12x^2y^2z^2\",\r\n    paso: \"Ingrese el factor común de la siguiente expresión: \",\r\n    //explicacion:\"En este caso todos los términos de la expresión algebraica presentan un factor común, la tarea es encontrar dicho factor común para luego factorizar\",\r\n    //result_variable:[\"6\",\"x\",\"y\",\"z\",\"6x\",\"6y\",\"6z\",\"xy\",\"xz\",\"yz\",\"yx\",\"zx\",\"zy\",\"6xy\",\"6yx\",\"6xz\",\"6zx\",\"6yz\",\"6zy\",\"xyz\",\"xzy\",\"yxz\",\"yzx\",\"zxy\",\"zyx\"],\r\n    //hint_result_var:\"Aún la ecuación es factorizable, añada otro/s factor común\",\r\n    result_final:\"(6xyz)(x-5yz+2xyz)\",\r\n    hint_solicitado:[\"Un factor común de esta ecuación es 6, pero la ecuación todavía es factorizable\",\"Otro factor común es 6x, pero todavía se puede agregar otro valor al factor común\",\"El factor común de la expresión es 6xyz\"],\r\n    entrada:[\"6xyz\",\"6yxz\",\"6zxy\",\"6zyx\"],\r\n    error:\"factor común incorrecto, ingrese el factor común correspondiente a la expresión dada\",\r\n    validacion:\"Haz encontrado el factor común\",\r\n    dificultad:\"4\"\r\n}\r\n\r\n","//react functional component\r\nimport React from 'react';\r\n\r\n//tipo de ejercicios\r\nimport FC from './factorComun/FactorComun';\r\nimport FCC from './factorComunCompuesto/FactorComunCompuesto';\r\nimport DC from './diferenciaCuadrados/DiferenciaCuadrados';\r\nimport DSC from './diferenciaSumaCubos/DiferenciaSumaCubos';\r\nimport TC from './trinomiosCuadraticos/TrinomiosCuadraticos';\r\n\r\n//Ejercicios\r\nimport { Ejercicio1,Ejercicio2,Ejercicio3,Ejercicio4,Ejercicio5,Ejercicio6,Ejercicio7 } from './factorComun/EjerciciosFC';\r\n\r\n/*\r\nTutor que carga un ejercicio de cualquiera de estos tipos (importaciones),\r\nserá un request como función de parámetros\r\n\r\nla idea es definir un enlace que diga para este usuario cargue este ejercicio especifico.\r\n*/\r\n\r\nconst Principal = () =>{\r\n\r\n    return (\r\n        <>\r\n\r\n            <FC ejercicio={Ejercicio1}></FC><br/>\r\n            <FCC></FCC><br/>\r\n            <DC></DC><br/>\r\n            <DSC></DSC><br/>\r\n            <TC></TC>\r\n            <br/>\r\n           \r\n        </>\r\n    )\r\n}\r\nexport default Principal;","import React from 'react';\r\nimport reactDom from 'react-dom';\r\nimport Tutor from './Tutor';\r\nimport './index.css';\r\n\r\n\r\nconst divRoot = document.querySelector('#root');\r\n\r\nreactDom.render( <Tutor/>,divRoot);"],"sourceRoot":""}